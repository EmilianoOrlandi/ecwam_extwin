      MODULE YOWWIND

      IMPLICIT NONE

!*    **  *WIND* - VARIABLES USED FOR FORCING INPUT AND COMPUTATIONS.
!          See *INIT_FIELDG* for the initialisation

      TYPE FORCING_FIELDS 
        REAL :: UWND    ! INPUT U COMPONENT ON WAVE MODEL GRID of
                        ! 10m wind, or friction velocity or surfact stress
                        ! See ICODE and ICODE_CPL
        REAL :: VWND    ! INPUT V COMPONENT ON WAVE MODEL GRID of
                        ! 10m wind, or friction velocity or surfact stress
                        ! See ICODE and ICODE_CPL
        REAL :: AIRD    ! INPUT AIR DENSITY ON WAVE MODEL GRID
        REAL :: ZIDL    ! INPUT Zi/L ON WAVE MODEL GRID
        REAL :: CIFR    ! INPUT SEA ICE FRACTION ON WAVE MODEL GRID 
        REAL :: CITH    ! INPUT SEA ICE THICKNESS ON WAVE MODEL GRID 
        REAL :: UCUR    ! INPUT U COMPONENT OF CURRENT ON WAVE MODEL GRID
        REAL :: VCUR    ! INPUT V COMPONENT OF CURRENT ON WAVE MODEL GRID
        REAL :: WSWAVE  ! INPUT WIND SPEED (WAVE PARAMETER 245) ON WAVE MODEL GRID
        REAL :: WDWAVE  ! INPUT WIND DIRECTION (WAVE PARAMETER 249) ON WAVE MODEL GRID
!        REAL :: USTAR   ! INPUT FRICTION VELOCITY 
        REAL :: XLON    ! LONGITUDE OF FORCING_FIELDS DATA THAT ARE NEEDED (i.e. all local points only !) 
        REAL :: YLAT    ! LATITUDE  OF FORCING_FIELDS DATA THAT ARE NEEDED (i.e. all local points only !) 
      END TYPE FORCING_FIELDS 

      REAL, PARAMETER :: WSPMIN=1.
      REAL, PARAMETER :: WSPMIN_RESET_TAUW=3.
      REAL, PARAMETER :: RWFAC=0.5 

      CHARACTER(LEN=14) :: CDA 
      CHARACTER(LEN=14) :: CDAWIFL 
      CHARACTER(LEN=14) :: CDATEWO 
      CHARACTER(LEN=14) :: CDATEFL 
      CHARACTER(LEN=14), ALLOCATABLE :: CDTNEXT(:) 
      CHARACTER(LEN=80) :: CWDFILE  

      INTEGER :: IIG 
      INTEGER :: NC
      INTEGER :: NR
      INTEGER :: NXFF
      INTEGER :: NYFF
      INTEGER :: NSTORE
      INTEGER :: IUNITW=0
      INTEGER :: NBITW=3400000

      TYPE(FORCING_FIELDS), ALLOCATABLE :: FIELDG(:,:)
      TYPE(FORCING_FIELDS), ALLOCATABLE :: FF_NEXT(:,:)
      TYPE(FORCING_FIELDS), ALLOCATABLE :: FIELDG_coupl(:,:)

      REAL, ALLOCATABLE :: NORMS_IN(:,:)

      LOGICAL :: LLWSWAVE
      LOGICAL :: LLWDWAVE
      LOGICAL :: LLNEWCURR

!*     VARIABLE.   TYPE.     PURPOSE.
!      ---------   -------   --------
!      *WSPMIN*    REAL      MINIMUM WIND SPEED ALLOWED IN WAM.
!      *WSPMIN_RESET_TAUW    MINIMUM WIND SPEED TO RESET WAVE INDUCED STRESS
!      *RWFAC*     REAL      REDUCTION FACTOR OF THE SURFACE CURRENTS
!                            WHEN USED TO COMPUTE THE RELATIVE WINDS
!                            0 <= RWFAC <= 1
!      *CDA*       CHAR*14   DATE OF LAST WINDFIELD READ IN.
!      *CDATEWO*   CHAR*14   DATE OF NEXT WIND FIELD TO BE READ.
!      *CDAWIFL*   CHAR*14   DATE OF NEXT WIND FILE NAME.
!      *CDATEFL*   CHAR*14   DATE OF NEXT WIND FILE TO BE ACCESSED.
!      *CDTNEXT*   CHAR*14   DATE CORRESPONDING TO TEMPORARY STORAGE
!                            (SEE BELOW).
!      *CWDFILE*   CHAR*80   FILENAME FOR FILE CONTAINING WIND SPEED
!                            AND DIRECTION TIMESERIES WHEN USED INSTEAD
!                            OF FORCING FROM INPUT WIND FIELDS
!                            (see USERIN).
!      *IIG*       INTEGER   BLOCK NUMBER OF LAST WIND FIELD READ IN
!      *NC*        INTEGER   NUMBER OF COLUMNS IN INPUT WIND ARRAY
!      *NR*        INTEGER   NUMBER OF ROWS    IN INPUT WIND ARRAY
!      *NXFF       INTEGER   NUMBER OF ROWS    IN FORCING_FIELDS DATA 
!      *NYFF       INTEGER   NUMBER OF COLUMNS IN FORCING_FIELDS DATA 
!      *NSTORE*    INTEGER   DIMENSION OF CDTNEXT
!      *IUNITW*    INTEGER   UNIT USED TO OPEN THE INPUT WIND DATA
!                            OR THE FILE HANDLE IF GRIBAPI IS USED.
!      *NBITW*     INTEGER   SIZE OF DECODING BUFFER FOR FORCING DATA.
!      *FIELDG*    REAL      INPUT FORCING FIELDS ON THE WAVE MODEL GRID:
!      *FF_NEXT*   REAL      TEMPORARY STORAGE FOR FORCING
!      *NORMS_IN*  REAL      NORMS OF FIELDG (mean, min, max, variance)

!      *LLWSWAVE*  LOGICAL   TRUE IF PARAMETER 245 IS PART OF THE INPUT
!      *LLWDWAVE*  LOGICAL   TRUE IF PARAMETER 249 IS PART OF THE INPUT
!      *LLNEWCURR* LOGICAL   TRUE IF NEW CURRENTS ARE PASSED FROM IFS
!                            TO WAM
! ----------------------------------------------------------------------

      END MODULE YOWWIND
