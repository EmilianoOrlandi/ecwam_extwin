      SUBROUTINE MPGATHERERSFILE(IRECV,ITAG,NSTART,NEND,NSPFLD,NSCFLD,
     &                           FL3,FLPTS,
     &                           U10,THW,US,
     &                           EMPTS,FMPTS,THQPTS,U10PTS,THWPTS,USPTS)

!****  *MPGATHERERSFILE* - GATHERS SPECTRUM AND SCALAR FIELDS ONTO 
!****                      A SINGLE PE FOR COLLOCATION FILE IN OUTERS
!****                      AT SELECTED GRID POINTS

!     J. BIDLOT    ECMWF   MAY 1996  MESSAGE PASSING

!     PURPOSE.
!     --------

!     GATHER NSPFLD SPECTRUM AND NSCFLD SCALAR FIELDS DISTRIBUTED ACROSS
!     THE DIFFERENT PROCESSES ONTO THE SINGLE PROCESS IRECV 
!     FOR SELECTED GRID POINTS.

!*    INTERFACE.
!     ----------

!     CALL *MPGATHERSPP*(IRECV,ITAG,NSTART,NEND,NSPFLD,NSCFLD, 
!    1                   FL1,FLPTS,
!    2                   U10,THW,US,
!    3                   EMPTS,FMPTS,THQPTS,U10PTS,THWPTS,USPTS)


!     *IRECV*     RANK OF THE PROCESS ONTO WHICH FIELD IS COLLECTED 
!     *ITAG*      TAG ASSOCIATED WITH A PARTICULAR CALL TO SUBROUTINE
!                 THIS IS NECESSARY TO DIFFERENTIATE THE DIFFERENT CALLS
!                 THE USE OF A SEPARATE TAG FOR EACH SPECIFIC CALL 
!                 SHOULD  ENSURE THAT NO CONFLICT ARISES BETWEEN 
!                 DIFFERENT MESSAGES
!     *NSTART*    INDEX OF THE FIRST POINT OF THE SUB GRID DOMAIN
!     *NEND*      INDEX OF THE LAST POINT OF THE SUB GRID DOMAIN
!     *NSPFLD*    NUMBER OF SPECTRUM FIELDS
!     *NSCFLD*    NUMBER OF SCALAR FIELDS
!     *FL3*       BLOCK OF SPECTRA.
!     *FLPTS*     SPECTRA AT THE SELECTED GRID POINTS (OUTPUT) 
!     *U10*       WIND SPEED IN M/S.
!     *THW*       WIND DIRECTION IN RADIANS
!     *US*        FRICTION VELOCITY IN M/S.
!     *EMPTS*     TOTAL ENERGY AT SELECTED GRID POINTS (OUTPUT).
!     *FMPTS*     MEAN FREQUENCY AT SELECTED GRID POINTS (OUTPUT). 
!     *THQPTS*    MEAN WAVE DIRECTION AT SELECTED GRID POINTS (OUTPUT).
!     *U10PTS*    WIND SPEED AT SELECTED GRID POINTS (OUTPUT). 
!     *THWPTS*    WIND DIRECTION AT SELECTED GRID POINTS (OUTPUT).
!     *USPTS*     FRICTION VELOCITY AT SELECTED GRID POINTS (OUTPUT).


!     METHOD.
!     -------
!     MPL SEND OF A MESSAGE BUFFER CONTAINING ALL THE FIELDS AT ALL
!     SELECTED GRID POINTS HELD BY THAT PROCESS TO THE PROCESS
!     CORRESPONDING TO IRECV FOR ALL PROCESS EXCEPT FOR THE PROCESS
!     CORRESPONDING TO IRECV WHERE THE MESSAGE BUFFERS ARE RECEIVED
!     AND REORDERED.

!     EXTERNALS.
!     ----------
!     MPL PACKAGE :
!         MPL_SEND
!         MPL_RECV
!         MPL_ABORT 

!     REFERENCES.
!     -----------
!         NONE
! -------------------------------------------------------------------

      USE YOWCOER  , ONLY : IERS     ,IJERS
      USE YOWMEAN  , ONLY : EMEAN    ,FMEAN    ,THQ
      USE YOWMPP   , ONLY : IRANK    ,NPROC    ,NINF     ,NSUP
      USE YOWPARAM , ONLY : NANG     ,NFRE     ,NIBLO
      USE MPL_MODULE
!----------------------------------------------------------------------

      IMPLICIT NONE

      INTEGER, INTENT(IN) :: IRECV, NSPFLD, NSCFLD
      INTEGER, INTENT(INOUT) ::  ITAG
      INTEGER, DIMENSION(NPROC), INTENT(IN) :: NSTART,NEND
      REAL, DIMENSION(NINF-1:NSUP,NANG,NFRE), INTENT(IN) ::  FL3
      REAL,DIMENSION(NSPFLD,IERS,NANG,NFRE), INTENT(OUT) :: FLPTS

      REAL, DIMENSION(NINF:NSUP), INTENT(IN) :: U10,THW,US
      REAL, DIMENSION(IERS), INTENT(OUT) :: EMPTS, FMPTS
      REAL, DIMENSION(IERS), INTENT(OUT) :: THQPTS, U10PTS, THWPTS,USPTS

      INTEGER :: NGOU, IJ, M, K, KCOUNT, IP
      INTEGER :: MAXLENGTH
      INTEGER :: KRCOUNT, KRFROM, KRTAG

!----------------------------------------------------------------------

      REAL,ALLOCATABLE :: ZCOMBUF(:)

      MAXLENGTH=(NSCFLD+NSPFLD*NANG*NFRE)*IERS
      ALLOCATE(ZCOMBUF(MAXLENGTH))

!     1.0 DEFAULT ACTION IF NO FIELD GATHERING 
!         ------------------------------------
      IF((IRECV.EQ.0).OR.(NPROC.EQ.1)) THEN
        DO NGOU=1,IERS
          IJ=IJERS(NGOU)
          EMPTS(NGOU) = EMEAN(IJ)
          FMPTS(NGOU) = FMEAN(IJ)
          THQPTS(NGOU) = THQ(IJ)
          U10PTS(NGOU) = U10(IJ)
          THWPTS(NGOU) = THW(IJ)
          USPTS(NGOU) = US(IJ)
          DO  M = 1, NFRE
            DO K = 1, NANG
              FLPTS(1,NGOU,K,M)=FL3(IJ,K,M)
            ENDDO
          ENDDO
        ENDDO

      ELSEIF(IRANK.NE.IRECV) THEN
!     1.1 SEND TO THE PROCESS THAT GATHERS THE WHOLE FIELD
!         ------------------------------------------------

!     LOAD COMMUNICATION BUFFER
        KCOUNT=0
        DO NGOU=1,IERS

          IJ=IJERS(NGOU)
          IF((IJ.GE.NSTART(IRANK)).AND.(IJ.LE.NEND(IRANK))) THEN
            KCOUNT=KCOUNT+1
            ZCOMBUF(KCOUNT)=EMEAN(IJ)
            KCOUNT=KCOUNT+1
            ZCOMBUF(KCOUNT)=FMEAN(IJ)
            KCOUNT=KCOUNT+1
            ZCOMBUF(KCOUNT)=THQ(IJ)
            KCOUNT=KCOUNT+1
            ZCOMBUF(KCOUNT)=U10(IJ)
            KCOUNT=KCOUNT+1
            ZCOMBUF(KCOUNT)=THW(IJ)
            KCOUNT=KCOUNT+1
            ZCOMBUF(KCOUNT)=US(IJ)

            DO  M = 1, NFRE
              DO K = 1, NANG
                KCOUNT=KCOUNT+1
                ZCOMBUF(KCOUNT)=FL3(IJ,K,M)
              ENDDO
            ENDDO

          ENDIF

        ENDDO

!     SEND BUFFER
        CALL MPL_SEND(ZCOMBUF(1:KCOUNT),KDEST=IRECV,KTAG=ITAG,
     &   CDSTRING='MPGATHERSPP:')
      ELSE
!     1.2.1  RECEIVE CONTRIBUTION TO THE FIELD FROM THE OTHER PROCESSES
!            ---------------------------------------------------------- 
        DO IP=1,NPROC-1
          CALL MPL_RECV(ZCOMBUF(1:MAXLENGTH),KTAG=ITAG,KOUNT=KRCOUNT,
     &     KFROM=KRFROM,KRECVTAG=KRTAG,CDSTRING='MPGATHERSPP:')
          IF(KRTAG.NE.ITAG) CALL MPL_ABORT
     &     ('MPL_RECV ERROR in MPGATHERSPP:  MISMATCHED TAGS' )

!  DECODE BUFFER
          KCOUNT=0

          DO NGOU=1,IERS
            IJ=IJERS(NGOU)
            IF((IJ.GE.NSTART(KRFROM)).AND.(IJ.LE.NEND(KRFROM))) THEN
              KCOUNT=KCOUNT+1
              EMPTS(NGOU)=ZCOMBUF(KCOUNT)
              KCOUNT=KCOUNT+1
              FMPTS(NGOU)=ZCOMBUF(KCOUNT)
              KCOUNT=KCOUNT+1
              THQPTS(NGOU)=ZCOMBUF(KCOUNT)
              KCOUNT=KCOUNT+1
              U10PTS(NGOU)=ZCOMBUF(KCOUNT)
              KCOUNT=KCOUNT+1
              THWPTS(NGOU)=ZCOMBUF(KCOUNT)
              KCOUNT=KCOUNT+1
              USPTS(NGOU)=ZCOMBUF(KCOUNT)

              DO  M = 1, NFRE
                DO K = 1, NANG
                  KCOUNT=KCOUNT+1
                  FLPTS(1,NGOU,K,M)=ZCOMBUF(KCOUNT)
                ENDDO
              ENDDO

            ENDIF
          ENDDO

          IF(KRCOUNT.NE.KCOUNT) THEN
            WRITE(*,*) ' PE: ', IRANK, ' KRCOUNT: ', KRCOUNT,
     &       ' KCOUNT: ', KCOUNT, ' IERS: ', IERS, ' KRFROM: ',
     &       KRFROM, ' NSTART(KRFROM): ', NSTART(KRFROM),
     &       ' NEND(KRFROM): ', NEND(KRFROM), ' IJERS(*): ', IJERS
            CALL MPL_ABORT
     &       ('MPL_RECV ERROR in MPGATHERFILE: WRONG LENGTH OF MESSAGE')
          ENDIF

        ENDDO
!     1.2.2  CONTRIBUTION FROM RECEIVING PROCESS 
!            ----------------------------------- 

        DO NGOU=1,IERS
          IJ=IJERS(NGOU)
          IF((IJ.GE.NSTART(IRANK)).AND.(IJ.LE.NEND(IRANK)))THEN
            EMPTS(NGOU) = EMEAN(IJ)
            FMPTS(NGOU) = FMEAN(IJ)
            THQPTS(NGOU) = THQ(IJ)
            U10PTS(NGOU) = U10(IJ)
            THWPTS(NGOU) = THW(IJ)
            USPTS(NGOU) = US(IJ)
            DO  M = 1, NFRE
              DO K = 1, NANG
                FLPTS(1,NGOU,K,M)=FL3(IJ,K,M)
              ENDDO
            ENDDO
          ENDIF
        ENDDO

      ENDIF

      DEALLOCATE(ZCOMBUF)

      RETURN
      END SUBROUTINE MPGATHERERSFILE
