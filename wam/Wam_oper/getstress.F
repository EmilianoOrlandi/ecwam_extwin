      SUBROUTINE GETSTRESS(U10OLD,THWOLD,USOLD,TAUW,Z0OLD,
     &                     ROAIRO, ZIDLOLD,
     &                     NSTART,NEND, IREAD)
! ----------------------------------------------------------------------
!     J. BIDLOT    ECMWF      SEPTEMBER 1997 

!     S. ABDALLA   ECMWF      OCTOBER 2001  AIR DENSITY & Zi/L

!*    PURPOSE.
!     --------
!     READS RESTART WIND AND STRESS FIELDS FROM DISK OR USE GRIB WIND
!     AND DRAG COEFFICIENT TO RECONSTRUCT ALL WIND AND STRESS FIELDS.

!**   INTERFACE.
!     ----------
!     *CALL**GETSTRESS(U10OLD,THWOLD,USOLD,TAUW,Z0OLD,NSTART,NEND,IREAD)
!     *U10OLD*    WIND SPEED.
!     *THWOLD*    WIND DIRECTION (RADIANS).
!     *USOLD*     FRICTION VELOCITY.
!     *TAUW*      WAVE STRESS.
!     *Z0OLD*     ROUGHNESS LENGTH IN M.
!     *ROAIRO*    AIR DENSITY IN KG/M3.
!     *ZIDLOLD*   Zi/L (Zi: INVERSION HEIGHT, L: MONIN-OBUKHOV LENGTH).
!     *NSTART*    INDEX OF THE FIRST POINT OF THE SUB GRID DOMAIN
!     *NEND*      INDEX OF THE LAST POINT OF THE SUB GRID DOMAIN
!     *IREAD*     PROCESSOR WHICH WILL ACCESS THE FILE ON DISK

!     METHOD.
!     -------
!     USE READSTRESS TO READ IN THE FILE DEPENDING ON THE PBIO
!     SOFTWARE OR NOT. 
!     THE READING IS ONLY DONE ON PE 1, THEREFORE
!     THE RELEVANT INFORMATION IS SENT TO THE OTHER PE'S USING 
!     MPDISTRIBSCFLD

!     EXTERNALS.
!     ----------
!     BUILDSTRESS
!     GETENV
!     GRSTNAME
!     MPDISTRIBSCFLD
!     MPL_BARRIER
!     READSTRESS

!     REFERENCE.
!     ----------
!     NONE
! ----------------------------------------------------------------------

      USE YOWGRID  , ONLY : IGL
      USE YOWMESPAS, ONLY : LMESSPASS,LPBIOIN  ,LGRIBIN  ,LWAVEWIND
      USE YOWMPP   , ONLY : IRANK    ,NPROC    ,NINF     ,NSUP     ,KTAG
      USE YOWPARAM , ONLY : NBLO     ,NIBLO
      USE YOWSTAT  , ONLY : CDATEA   ,CDATEF   ,CDTPRO
      USE YOWTEST  , ONLY : IU06     ,ITEST
      USE YOWTEXT  , ONLY : ICPLEN   ,CPATH    ,LRESTARTED
      USE YOWWIND  , ONLY : CDAWIFL  ,CDATEWO  ,CDATEFL
      USE MPL_MODULE

      CHARACTER*12 ZERO
      CHARACTER*120 FILENAME

! ----------------------------------------------------------------------
      INTEGER,DIMENSION(NPROC) :: NSTART, NEND
      REAL,DIMENSION(NINF:NSUP,NBLO) :: U10OLD,THWOLD,USOLD,Z0OLD,TAUW,
     &                                  ROAIRO, ZIDLOLD 
! ----------------------------------------------------------------------
!     define local allocatable arrays
      INTEGER,ALLOCATABLE,DIMENSION(:) :: IBUF
      REAL,ALLOCATABLE,DIMENSION(:,:) :: RU10OLD,RTHWOLD,RUSOLD,
     &                                   RZ0OLD,RTAUW
     &                                  ,RADOLD, RZIDLOLD

      ZERO = ' '

      IF (ITEST > 3) THEN
        WRITE(IU06,*) ' SUB: GETSTRESS. '
        WRITE(IU06,*) ' ABOUT TO READ WIND AND STRESS FILE '
        WRITE(IU06,*) ' CDTPRO    =', CDTPRO
        WRITE(IU06,*) ' LMESSPASS =', LMESSPASS
        WRITE(IU06,*) ' LPBIOIN   =', LPBIOIN
        WRITE(IU06,*) ' LGRIBIN   =', LGRIBIN
        WRITE(IU06,*) ' LRESTARTED=', LRESTARTED
        CALL FLUSH (IU06)
      ENDIF

      IF(LMESSPASS) THEN

        ISEND=IREAD
        IBUFLENGTH=48+1

        ALLOCATE(RU10OLD(NIBLO,NBLO),RTHWOLD(NIBLO,NBLO),
     &  RUSOLD(NIBLO,NBLO),RZ0OLD(NIBLO,NBLO),RTAUW(NIBLO,NBLO)
     &                    ,RADOLD(NIBLO,NBLO),RZIDLOLD(NIBLO,NBLO)
     &                                       )

        ALLOCATE(IBUF(IBUFLENGTH))

!       READ RESTART FILE FROM PE ISEND (IREAD) 

        CALL GSTATS(1882,0)
        IF (IRANK.EQ.ISEND) THEN

          IF(LGRIBIN.AND..NOT.LRESTARTED) THEN
            CALL BUILDSTRESS(RU10OLD,RTHWOLD,RUSOLD,RTAUW,RZ0OLD,
     &                       RADOLD, RZIDLOLD, 
     &                       NEND(NPROC))

          ELSE
            CALL GRSTNAME(CDATEA,CDATEF,'LAW',ICPLEN,CPATH,FILENAME)
            CALL READSTRESS(RU10OLD,RTHWOLD,RUSOLD,RTAUW,RZ0OLD,
     &                      RADOLD,RZIDLOLD,FILENAME)
          ENDIF

        ENDIF
        CALL GSTATS(1882,1)

!       BROADCAST THE 4 DATES FROM RESTART FILE TO THE OTHER PE'S
!       AS WELL AS LWAVEWIND
        IF((ISEND.EQ.0).OR.(NPROC.EQ.1)) THEN
      
        ELSE
          IF(IRANK.EQ.ISEND) THEN
            KCOUNT=0
            DO IC=1,12
              READ(CDTPRO(IC:IC),'(I1)') IBUF(IC)
            ENDDO
            DO IC=1,12
              READ(CDATEWO(IC:IC),'(I1)') IBUF(12+IC)
            ENDDO
            DO IC=1,12
              READ(CDAWIFL(IC:IC),'(I1)') IBUF(24+IC)
            ENDDO
            DO IC=1,12
              READ(CDATEFL(IC:IC),'(I1)') IBUF(36+IC)
            ENDDO
            IF(LWAVEWIND) THEN
              IBUF(49)=1
            ELSE
              IBUF(49)=0
            ENDIF
          ENDIF

          CALL GSTATS(621,0)
          CALL MPL_BROADCAST(IBUF(1:IBUFLENGTH),KROOT=ISEND,
     &     KTAG=KTAG,CDSTRING='GETSTRESS:')
          CALL GSTATS(621,1)

          KTAG=KTAG+1

          IF(IRANK.NE.ISEND) THEN
            DO IC=1,12
              WRITE(CDTPRO(IC:IC),'(I1)') IBUF(IC)
            ENDDO
            DO IC=1,12
              WRITE(CDATEWO(IC:IC),'(I1)') IBUF(12+IC)
            ENDDO
            DO IC=1,12
              WRITE(CDAWIFL(IC:IC),'(I1)') IBUF(24+IC)
            ENDDO
            DO IC=1,12
              WRITE(CDATEFL(IC:IC),'(I1)') IBUF(36+IC)
            ENDDO

            IF(IBUF(49).EQ.1) THEN
              LWAVEWIND=.TRUE. 
            ELSE
              LWAVEWIND=.FALSE. 
            ENDIF
          ENDIF

        ENDIF

        IF(CDTPRO.EQ.'000000000000') CDTPRO = ZERO
        IF(CDATEWO.EQ.'000000000000')CDATEWO = ZERO
        IF(CDAWIFL.EQ.'000000000000')CDAWIFL = ZERO
        IF(CDATEFL.EQ.'000000000000') CDATEFL= ZERO

!       DISTRIBUTE THE DIFFERENT CONTRIBUTIONS TO THE OTHER PE'S

        CALL MPDISTRIBSCFLD(ISEND,KTAG,NSTART,NEND,RU10OLD)
        KTAG=KTAG+1
        CALL MPDISTRIBSCFLD(ISEND,KTAG,NSTART,NEND,RTHWOLD)
        KTAG=KTAG+1
        CALL MPDISTRIBSCFLD(ISEND,KTAG,NSTART,NEND,RUSOLD)
        KTAG=KTAG+1
        CALL MPDISTRIBSCFLD(ISEND,KTAG,NSTART,NEND,RTAUW)
        KTAG=KTAG+1
        CALL MPDISTRIBSCFLD(ISEND,KTAG,NSTART,NEND,RZ0OLD)
        KTAG=KTAG+1

        CALL MPDISTRIBSCFLD(ISEND,KTAG,NSTART,NEND,RADOLD)
        KTAG=KTAG+1
        CALL MPDISTRIBSCFLD(ISEND,KTAG,NSTART,NEND,RZIDLOLD)
        KTAG=KTAG+1

        IF (ITEST.GE.2)
     &   WRITE(IU06,*)
     &   'SUB. GETSTRESS: RESTART WIND AND STRESS COLLECTED'

!       KEEP CORRESPONDING CONTRIBUTION 
        DO IG=1,NBLO
          DO IJ=NSTART(IRANK),NEND(IRANK)
            U10OLD(IJ,IG)=RU10OLD(IJ,IG)
            THWOLD(IJ,IG)=RTHWOLD(IJ,IG)
            USOLD(IJ,IG)=RUSOLD(IJ,IG)
            TAUW(IJ,IG)=RTAUW(IJ,IG)
            Z0OLD(IJ,IG)=RZ0OLD(IJ,IG)

            ROAIRO(IJ,IG)=RADOLD(IJ,IG)
            ZIDLOLD(IJ,IG)=RZIDLOLD(IJ,IG)
          ENDDO
        ENDDO

        DEALLOCATE(RU10OLD,RTHWOLD,RUSOLD,RZ0OLD,RTAUW,IBUF,
     &             RADOLD,RZIDLOLD)

      ELSE
        IF(LGRIBIN.AND..NOT.LRESTARTED) THEN
          CALL BUILDSTRESS(U10OLD,THWOLD,USOLD,TAUW,Z0OLD,
     &                     ROAIRO,ZIDLOLD,NIBLO)
        ELSE
          CALL GRSTNAME(CDATEA,CDATEF,'LAW',ICPLEN,CPATH,FILENAME)
          CALL READSTRESS(U10OLD,THWOLD,USOLD,TAUW,Z0OLD,
     &                    ROAIRO,ZIDLOLD,FILENAME)
        ENDIF
      ENDIF

      WRITE(IU06,*) ''
      WRITE(IU06,*) ' WIND AND STRESS FILES READ IN.......',
     &              ' CDTPRO  = ', CDTPRO

      IF (ITEST > 0) CALL FLUSH (IU06)
      RETURN
      END SUBROUTINE GETSTRESS
