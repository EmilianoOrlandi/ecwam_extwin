      SUBROUTINE OUTBS (FL3, FL, IJS, IJL, IG, IGL, IU25, IU26,
     &                  THWOLD,USOLD,U10NEW,THWNEW,USNEW,TAUW,
     &                  NSTART,NEND)
! ----------------------------------------------------------------------

!**** *OUTBS* - MODEL OUTPUT FROM BLOCK TO FILE, PRINTER AND COMMON.

!     H. GUNTHER         GKSS/ECMWF         JUNE 1990
!     J. BIDLOT          ECMWF   FEBRUARY 1996 MESSAGE PASSING

!*    PURPOSE.
!     --------

!       CONTROL OUTPUT OF WAVE AND WIND FIELDS.


!**   INTERFACE.
!     ----------
!   *CALL* *OUTBS (FL3, FL, IJS, IJL, IG, IGL, IU25, IU26,
!    1                  THWOLD,USOLD,U10NEW,THWNEW,USNEW,TAUW)
!    2                  NSTART,NEND)*
!      *FL3*    - SPECTRUM.
!      *FL*     - WORKING ARRAY FOR SWELL OUTPUT.
!      *IJS*    - INDEX OF FIRST GRIDPOINT
!      *IJL*    - INDEX OF LAST GRIDPOINT
!      *IG*     - BLOCK NUMBER
!      *IGL*    - TOTAL NUMBER OF BLOCKS.
!      *IU25*   - OUTPUT UNIT FOR SPECTRA.
!      *IU26*   - OUTPUT UNIT FOR SEA AND SWELL SPECTRA.
!      *THWOLD*    INTERMEDIATE STORAGE OF ANGLE (RADIANS) OF
!      *USOLD*     INTERMEDIATE STORAGE OF MODULUS OF FRICTION
!                  VELOCITY.
!      *U10NEW*    NEW WIND SPEED IN M/S.
!                  WIND VELOCITY.
!      *THWNEW*    WIND DIRECTION IN RADIANS IN OCEANOGRAPHIC
!                  NOTATION (POINTING ANGLE OF WIND VECTOR,
!                  CLOCKWISE FROM NORTH).
!      *USNEW*     NEW FRICTION VELOCITY IN M/S.
!      *TAUW*      WAVE STRESS IN (M/S)**2
!      *NSTART*    INDEX OF THE FIRST POINT OF THE SUB GRID DOMAIN
!      *NEND*      INDEX OF THE LAST POINT OF THE SUB GRID DOMAIN


!     EXTERNALS.
!     ----------

!       *FEMEAN*    - COMPUTATION OF MEAN FREQUENCY AT EACH GRID POINT.
!       *OUTERS*    - OUTPUT OF SATELLITE COLOCATION SPECTRA.
!       *OUTGRID*   - SAVE BLOCKED PARAMETERS INTO GRID ARRAYS.
!       *OUTSPP*    - OUTPUT OF SPECTRA AT SELECTED POINTS.
!       *SEMEAN*    - COMPUTATION OF TOTAL ENERGY AT EACH GRID POINT.
!       *SEPWISW*   - SEPARATION OF WINDSEA AND SWELL.
!       *STHQ*      - COMPUTATION OF MEAN WAVE DIRECTION AT EACH
!                     GRID POINT.
!       *MWP1*      - COMPUTATION OF MEAN PERIOD (1) AT EACH GRID POINT.
!       *MWP2*      - COMPUTATION OF MEAN PERIOD (2) AT EACH GRID POINT.
!       *WDIRSPREAD*- COMPUTATION OF MEAN DIRECTIONAL SPREAD AT EACH 
!                     GRID POINT. 
!       *KURTOSIS*  - COMPUTATION OF THE SURFACE ELEVATION KURTOSIS, 
!                     THE BEJAMIN-FEIR INDEX, THE SPECTRAL PEAKEDNESS 
!                     FACTOR AND THE MAXIMUM WAVE HEIGHT.
!       *STOKESDRIFT*  - COMPUTATION OF THE STOKES DRIFT VECTOR. 
!   
!     METHOD.
!     -------

!       NONE.

!     REFERENCE.
!     ----------

!       NONE.

! ----------------------------------------------------------------------
      USE YOWCOUT  , ONLY : IPFGTBL
      USE YOWINTP  , ONLY : WHGTTG   ,WDIRTG   ,WPKFTG   ,WMNFTG   ,
     &            USTARG   ,UDIRG    ,TAUWG    ,CDG      ,SMEANG   ,
     &            U10G     ,MWP1G    ,MWP2G    ,WSPRDG   ,C4G      ,
     &            BFG      ,QPG      ,DEPTHG   ,HMAXG    ,TMAXG    ,
     &            USTOKESG ,VSTOKESG 
      USE YOWINTS  , ONLY : WHGTSG   ,WDIRSG   ,WMNFSG   ,WHGTWG   ,
     &            WDIRWG   ,WMNFWG   ,MWP1SG   ,MWP2SG   ,WSPRDSG  ,
     &            MWP1WG   ,MWP2WG   ,WSPRDWG
      USE YOWMEAN  , ONLY : EMEAN    ,FMEAN    ,THQ      ,
     &            SMEAN    ,P1MEAN   ,P2MEAN   ,SPRDMEAN ,C4MEAN   ,
     &            BFMEAN   ,QPMEAN   ,HMAXMEAN ,FPMEAN   ,TMAXMEAN ,
     &            USTMEAN  ,VSTMEAN
      USE YOWMPP   , ONLY : NPROC    ,NINF     ,NSUP
      USE YOWPARAM , ONLY : NGX      ,NGY      ,NANG     ,NFRE     ,
     &            NBLO
      USE YOWSTAT  , ONLY : CDATEA   ,CDTPRO   ,CDTINTS  ,CDTSPT   ,
     &            CDTSPS   ,MARSTYPE ,NWAM_BLKS
      USE YOWSWEL  , ONLY : ESWELL   ,FSWELL   ,THSWELL  ,ESEA     ,
     &            FSEA     ,THWISEA  ,P1SWELL  ,P2SWELL  ,SPRDSWELL,
     &            P1SEA    ,P2SEA    ,SPRDSEA
      USE YOWTEST  , ONLY : IU06     ,ITEST    ,ITESTB

! ----------------------------------------------------------------------

!     ALLOCATABLE ARRAYS THAT ARE PASSED AS SUBROUTINE ARGUMENTS 

      INTEGER,DIMENSION(NPROC) :: NSTART,NEND
! Mod for OPENMP
      INTEGER JKGLO,KIJS,KIJL,NPROMA
! End Mod for OPENMP

      REAL,DIMENSION(NINF-1,NSUP,NANG,NFRE) :: FL3, FL
      REAL,DIMENSION(NINF:NSUP,NBLO) :: THWOLD,USOLD,TAUW
      REAL,DIMENSION(NINF:NSUP) :: U10NEW,THWNEW,USNEW

      LOGICAL :: LLAK, LLPEAKF
!     LOGICAL FUNCTION
      LOGICAL :: LLALLOC_GRDFLD

! ----------------------------------------------------------------------
!*    1. COMPUTE MEAN PARAMETERS.
!        ------------------------

      CALL GSTATS(1951,0)

!     ALLOCATE THE NECESSARY ARRAYS

      IF(IPFGTBL(9).NE.0) THEN
        IF(.NOT.ALLOCATED(SMEAN)) ALLOCATE(SMEAN(IJS:IJL))
      ENDIF
      IF(IPFGTBL(25).NE.0) THEN
        IF(.NOT.ALLOCATED(P1MEAN)) ALLOCATE(P1MEAN(IJS:IJL))
      ENDIF
      IF(IPFGTBL(26).NE.0) THEN
        IF(.NOT.ALLOCATED(P2MEAN)) ALLOCATE(P2MEAN(IJS:IJL))
      ENDIF
      IF(IPFGTBL(27).NE.0) THEN
        IF(.NOT.ALLOCATED(SPRDMEAN)) ALLOCATE(SPRDMEAN(IJS:IJL))
      ENDIF
      IF(IPFGTBL(6) .NE.0 .OR.
     &   IPFGTBL(34).NE.0 .OR.
     &   IPFGTBL(35).NE.0 .OR.
     &   IPFGTBL(36).NE.0 .OR.
     &   IPFGTBL(38).NE.0 .OR.
     &   IPFGTBL(39).NE.0     ) THEN
        IF(.NOT.ALLOCATED(FPMEAN)) ALLOCATE(FPMEAN(IJS:IJL))
        IF(.NOT.ALLOCATED(C4MEAN)) ALLOCATE(C4MEAN(IJS:IJL))
        IF(.NOT.ALLOCATED(BFMEAN)) ALLOCATE(BFMEAN(IJS:IJL))
        IF(.NOT.ALLOCATED(QPMEAN)) ALLOCATE(QPMEAN(IJS:IJL))
        IF(.NOT.ALLOCATED(HMAXMEAN)) ALLOCATE(HMAXMEAN(IJS:IJL))
        IF(.NOT.ALLOCATED(TMAXMEAN)) ALLOCATE(TMAXMEAN(IJS:IJL))
      ENDIF
      IF(IPFGTBL(40).NE.0 .OR. IPFGTBL(41).NE.0) THEN
        IF(.NOT.ALLOCATED(USTMEAN)) ALLOCATE(USTMEAN(IJS:IJL))
        IF(.NOT.ALLOCATED(VSTMEAN)) ALLOCATE(VSTMEAN(IJS:IJL))
      ENDIF
!     COMPUTE MEAN PARAMETERS

      NPROMA=(IJL-IJS+1)/NWAM_BLKS+1


      LLAK=.FALSE.
      LLPEAKF = .FALSE.
!$OMP PARALLEL DO SCHEDULE(DYNAMIC,1) PRIVATE(JKGLO,KIJS,KIJL)
      DO JKGLO=IJS,IJL,NPROMA
        KIJS=JKGLO
        KIJL=MIN(KIJS+NPROMA-1,IJL)

        CALL FEMEAN (FL3, KIJS, KIJL, EMEAN(KIJS), FMEAN(KIJS),
     &               LLAK)

        IF(IPFGTBL(2).NE.0) THEN
          CALL STHQ (FL3, KIJS, KIJL, THQ(KIJS))
        ENDIF

        IF(IPFGTBL(9).NE.0) THEN
          CALL MEANSQS (FL3,KIJS,KIJL,USNEW,FMEAN(KIJS),SMEAN(KIJS))
        ENDIF

        IF(IPFGTBL(25).NE.0) THEN
          CALL MWP1 (FL3, KIJS, KIJL, EMEAN(KIJS), P1MEAN(KIJS))
        ENDIF
        IF(IPFGTBL(26).NE.0) THEN
          CALL MWP2 (FL3, KIJS, KIJL, EMEAN(KIJS), P2MEAN(KIJS))
        ENDIF
        IF(IPFGTBL(27).NE.0) THEN
          CALL WDIRSPREAD (FL3, KIJS, KIJL, LLPEAKF, SPRDMEAN(KIJS))
        ENDIF
        IF(IPFGTBL(6) .NE.0 .OR.
     &     IPFGTBL(34).NE.0 .OR.
     &     IPFGTBL(35).NE.0 .OR.
     &     IPFGTBL(36).NE.0 .OR.
     &     IPFGTBL(38).NE.0 .OR.
     &     IPFGTBL(39).NE.0     ) THEN
          CALL KURTOSIS(FL3,KIJS,KIJL,IG,C4MEAN(KIJS),BFMEAN(KIJS),
     &                  QPMEAN(KIJS),FPMEAN(KIJS),HMAXMEAN(KIJS),
     &                  TMAXMEAN(KIJS))
        ENDIF

        IF(IPFGTBL(40).NE.0 .OR. IPFGTBL(41).NE.0) THEN
          CALL STOKESDRIFT(FL3,KIJS,KIJL,USTMEAN(KIJS),VSTMEAN(KIJS))
        ENDIF
      ENDDO
!$OMP END PARALLEL DO


      IF (ITEST.GE.3) THEN
        IF (ITESTB.GE.IG) THEN
          WRITE(IU06,*) '      SUB. OUTBS: INTEGRATED',
     &     ' PARAMETERS COMPUTED FOR OUTPUT'
        ENDIF
      ENDIF

!*    2. WINDSEA SWELL SEPARATION.
!        -------------------------

      IF (CDTINTS.EQ.CDTPRO .OR. CDTSPS.EQ.CDTPRO) THEN

!       ALLOCATE THE NECESSARY ARRAYS
        IF(IPFGTBL(16).NE.0) THEN
          IF(.NOT.ALLOCATED(ESWELL)) ALLOCATE(ESWELL(IJS:IJL))
          IF(.NOT.ALLOCATED(FSWELL)) ALLOCATE(FSWELL(IJS:IJL))
        ENDIF
        IF(IPFGTBL(12).NE.0) THEN
          IF(.NOT.ALLOCATED(ESWELL)) ALLOCATE(ESWELL(IJS:IJL))
        ENDIF
        IF(IPFGTBL(14).NE.0) THEN
          IF(.NOT.ALLOCATED(THSWELL)) ALLOCATE(THSWELL(IJS:IJL))
        ENDIF
        IF(IPFGTBL(29).NE.0) THEN
          IF(.NOT.ALLOCATED(P1SWELL)) ALLOCATE(P1SWELL(IJS:IJL))
          IF(.NOT.ALLOCATED(ESWELL)) ALLOCATE(ESWELL(IJS:IJL))
        ENDIF
        IF(IPFGTBL(31).NE.0) THEN
          IF(.NOT.ALLOCATED(P2SWELL)) ALLOCATE(P2SWELL(IJS:IJL))
          IF(.NOT.ALLOCATED(ESWELL)) ALLOCATE(ESWELL(IJS:IJL))
        ENDIF
        IF(IPFGTBL(33).NE.0) THEN
          IF(.NOT.ALLOCATED(SPRDSWELL)) ALLOCATE(SPRDSWELL(IJS:IJL))
        ENDIF
        IF(IPFGTBL(15).NE.0) THEN
          IF(.NOT.ALLOCATED(ESEA)) ALLOCATE(ESEA(IJS:IJL))
          IF(.NOT.ALLOCATED(FSEA)) ALLOCATE(FSEA(IJS:IJL))
        ENDIF
        IF(IPFGTBL(11).NE.0) THEN
          IF(.NOT.ALLOCATED(ESEA)) ALLOCATE(ESEA(IJS:IJL))
        ENDIF
        IF(IPFGTBL(13).NE.0) THEN
          IF(.NOT.ALLOCATED(ESEA)) ALLOCATE(ESEA(IJS:IJL))
          IF(.NOT.ALLOCATED(THWISEA)) ALLOCATE(THWISEA(IJS:IJL))
        ENDIF
        IF(IPFGTBL(28).NE.0) THEN
          IF(.NOT.ALLOCATED(P1SEA)) ALLOCATE(P1SEA(IJS:IJL))
          IF(.NOT.ALLOCATED(ESEA)) ALLOCATE(ESEA(IJS:IJL))
        ENDIF
        IF(IPFGTBL(30).NE.0) THEN
          IF(.NOT.ALLOCATED(P2SEA)) ALLOCATE(P2SEA(IJS:IJL))
          IF(.NOT.ALLOCATED(ESEA)) ALLOCATE(ESEA(IJS:IJL))
        ENDIF
        IF(IPFGTBL(32).NE.0) THEN
          IF(.NOT.ALLOCATED(SPRDSEA)) ALLOCATE(SPRDSEA(IJS:IJL))
        ENDIF

!       COMPUTE MEAN PARAMETERS

!$OMP PARALLEL DO SCHEDULE(DYNAMIC,1) PRIVATE(JKGLO,KIJS,KIJL)
        DO JKGLO=IJS,IJL,NPROMA
          KIJS=JKGLO
          KIJL=MIN(KIJS+NPROMA-1,IJL)

          CALL SEPWISW (FL3, FL, KIJS, KIJL, IG,THWOLD,USOLD,USNEW)
        ENDDO
!$OMP   END PARALLEL DO


        IF (ITEST.GE.3) THEN
          IF (ITESTB.GE.IG) THEN
            WRITE(IU06,*) '      SUB. OUTBS: SWELL /SEA',
     &       ' SEPARATION DONE'
          ENDIF
        ENDIF

      ENDIF

      CALL GSTATS(1951,1)
!*    3. OUTPUT OF SPECTRA AT SELECTED GRID POINTS.
!        ------------------------------------------

      IF (CDTSPT.EQ.CDTPRO .OR. CDTSPS.EQ.CDTPRO) THEN
        CALL OUTSPP (FL3, FL, IJS, IJL, IG, IU25, IU26,NSTART,NEND,
     &   U10NEW,THWNEW,USNEW)
        IF (ITEST.GE.3) THEN
          IF (ITESTB.GE.IG) THEN
            WRITE(IU06,*) '      SUB. OUTBS: OUTPUT OF SPECTRA',
     &       ' AT SELECTED POINTS DONE'
          ENDIF
        ENDIF
      ENDIF

!*    4. TRANSFER OF INTEGRATED PARAMETERS TO GRID ARRAYS.
!        -------------------------------------------------

!     ALLOCATE ARRAYS

      IF(IPFGTBL(1).NE.0) THEN
        IF(.NOT.ALLOCATED(WHGTTG)) THEN
          IF(LLALLOC_GRDFLD(1)) ALLOCATE(WHGTTG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(2).NE.0) THEN
        IF(.NOT.ALLOCATED(WDIRTG)) THEN
          IF(LLALLOC_GRDFLD(2)) ALLOCATE(WDIRTG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(3).NE.0) THEN
        IF(.NOT.ALLOCATED(WMNFTG)) THEN
          IF(LLALLOC_GRDFLD(3)) ALLOCATE(WMNFTG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(4).NE.0) THEN
        IF(.NOT.ALLOCATED(USTARG)) THEN
          IF(LLALLOC_GRDFLD(4)) ALLOCATE(USTARG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(5).NE.0) THEN
        IF(.NOT.ALLOCATED(UDIRG)) THEN
          IF(LLALLOC_GRDFLD(5))  ALLOCATE(UDIRG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(6).NE.0) THEN
        IF(.NOT.ALLOCATED(WPKFTG)) THEN
          IF(LLALLOC_GRDFLD(6)) ALLOCATE(WPKFTG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(7).NE.0) THEN
        IF(.NOT.ALLOCATED(CDG)) THEN
          IF(LLALLOC_GRDFLD(7)) ALLOCATE(CDG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(8).NE.0) THEN
        IF(.NOT.ALLOCATED(TAUWG)) THEN
          IF(LLALLOC_GRDFLD(8)) ALLOCATE(TAUWG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(9).NE.0) THEN
        IF(.NOT.ALLOCATED(SMEANG)) THEN
          IF(LLALLOC_GRDFLD(9)) ALLOCATE(SMEANG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(10).NE.0) THEN
        IF(.NOT.ALLOCATED(U10G)) THEN
          IF(LLALLOC_GRDFLD(10)) ALLOCATE(U10G(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(11).NE.0) THEN
        IF(.NOT.ALLOCATED(WHGTWG)) THEN
          IF(LLALLOC_GRDFLD(11)) ALLOCATE(WHGTWG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(12).NE.0) THEN
        IF(.NOT.ALLOCATED(WHGTSG)) THEN
          IF(LLALLOC_GRDFLD(12)) ALLOCATE(WHGTSG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(13).NE.0) THEN
        IF(.NOT.ALLOCATED(WDIRWG)) THEN
          IF(LLALLOC_GRDFLD(13)) ALLOCATE(WDIRWG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(14).NE.0) THEN
        IF(.NOT.ALLOCATED(WDIRSG)) THEN
          IF(LLALLOC_GRDFLD(14)) ALLOCATE(WDIRSG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(15).NE.0) THEN
        IF(.NOT.ALLOCATED(WMNFWG)) THEN
          IF(LLALLOC_GRDFLD(15)) ALLOCATE(WMNFWG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(16).NE.0) THEN
        IF(.NOT.ALLOCATED(WMNFSG)) THEN
          IF(LLALLOC_GRDFLD(16)) ALLOCATE(WMNFSG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(25).NE.0) THEN
        IF(.NOT.ALLOCATED(MWP1G)) THEN
          IF(LLALLOC_GRDFLD(25)) ALLOCATE(MWP1G(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(26).NE.0) THEN
        IF(.NOT.ALLOCATED(MWP2G)) THEN
          IF(LLALLOC_GRDFLD(26)) ALLOCATE(MWP2G(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(27).NE.0) THEN
        IF(.NOT.ALLOCATED(WSPRDG)) THEN
          IF(LLALLOC_GRDFLD(27)) ALLOCATE(WSPRDG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(28).NE.0) THEN
        IF(.NOT.ALLOCATED(MWP1WG)) THEN
          IF(LLALLOC_GRDFLD(28)) ALLOCATE(MWP1WG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(29).NE.0) THEN
        IF(.NOT.ALLOCATED(MWP1SG)) THEN
          IF(LLALLOC_GRDFLD(29)) ALLOCATE(MWP1SG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(30).NE.0) THEN
        IF(.NOT.ALLOCATED(MWP2WG)) THEN
          IF(LLALLOC_GRDFLD(30)) ALLOCATE(MWP2WG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(31).NE.0) THEN
        IF(.NOT.ALLOCATED(MWP2SG)) THEN
          IF(LLALLOC_GRDFLD(31)) ALLOCATE(MWP2SG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(32).NE.0) THEN
        IF(.NOT.ALLOCATED(WSPRDWG)) THEN
          IF(LLALLOC_GRDFLD(32)) ALLOCATE(WSPRDWG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(33).NE.0) THEN
        IF(.NOT.ALLOCATED(WSPRDSG)) THEN
          IF(LLALLOC_GRDFLD(33)) ALLOCATE(WSPRDSG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(34).NE.0) THEN
        IF(.NOT.ALLOCATED(C4G)) THEN
          IF(LLALLOC_GRDFLD(34)) ALLOCATE(C4G(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(35).NE.0) THEN
        IF(.NOT.ALLOCATED(BFG)) THEN
          IF(LLALLOC_GRDFLD(35)) ALLOCATE(BFG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(36).NE.0) THEN
        IF(.NOT.ALLOCATED(QPG)) THEN
          IF(LLALLOC_GRDFLD(36)) ALLOCATE(QPG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(37).NE.0) THEN
        IF(.NOT.ALLOCATED(DEPTHG)) THEN
          IF(LLALLOC_GRDFLD(37)) ALLOCATE(DEPTHG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(38).NE.0) THEN
        IF(.NOT.ALLOCATED(HMAXG)) THEN
          IF(LLALLOC_GRDFLD(38)) ALLOCATE(HMAXG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(39).NE.0) THEN
        IF(.NOT.ALLOCATED(TMAXG)) THEN
          IF(LLALLOC_GRDFLD(39)) ALLOCATE(TMAXG(NGX,NGY))
        ENDIF
      ENDIF
      IF(IPFGTBL(40).NE.0 .OR. IPFGTBL(41).NE.0 ) THEN
        IF(.NOT.ALLOCATED(USTOKESG)) THEN
          IF(LLALLOC_GRDFLD(40)) ALLOCATE(USTOKESG(NGX,NGY))
        ENDIF
        IF(.NOT.ALLOCATED(VSTOKESG)) THEN
          IF(LLALLOC_GRDFLD(41)) ALLOCATE(VSTOKESG(NGX,NGY))
        ENDIF
      ENDIF

      CALL OUTGRID (IJS, IJL, IG, U10NEW, THWNEW, USNEW, TAUW,
     &              NSTART,NEND)
      IF (ITEST.GE.3) THEN
        IF (ITESTB.GE.IG) THEN
          WRITE(IU06,*) '      SUB. OUTBS: OUTPUT OF ',
     &     'INTEGRATED PARAMETERS DONE'
          CALL FLUSH(IU06)
        ENDIF
      ENDIF

      IF(ALLOCATED(FPMEAN)) DEALLOCATE(FPMEAN)
      IF(ALLOCATED(SMEAN)) DEALLOCATE(SMEAN)
      IF(ALLOCATED(P1MEAN)) DEALLOCATE(P1MEAN)
      IF(ALLOCATED(P2MEAN)) DEALLOCATE(P2MEAN)
      IF(ALLOCATED(SPRDMEAN)) DEALLOCATE(SPRDMEAN)
      IF(ALLOCATED(C4MEAN)) DEALLOCATE(C4MEAN)
      IF(ALLOCATED(BFMEAN)) DEALLOCATE(BFMEAN)
      IF(ALLOCATED(QPMEAN)) DEALLOCATE(QPMEAN)
      IF(ALLOCATED(HMAXMEAN)) DEALLOCATE(HMAXMEAN)
      IF(ALLOCATED(TMAXMEAN)) DEALLOCATE(TMAXMEAN)
      IF(ALLOCATED(USTMEAN)) DEALLOCATE(USTMEAN)
      IF(ALLOCATED(VSTMEAN)) DEALLOCATE(VSTMEAN)

      IF (CDTINTS.EQ.CDTPRO .OR. CDTSPS.EQ.CDTPRO) THEN
        IF(ALLOCATED(ESWELL)) DEALLOCATE(ESWELL)
        IF(ALLOCATED(FSWELL)) DEALLOCATE(FSWELL)
        IF(ALLOCATED(THSWELL)) DEALLOCATE(THSWELL)
        IF(ALLOCATED(ESEA)) DEALLOCATE(ESEA)
        IF(ALLOCATED(FSEA)) DEALLOCATE(FSEA)
        IF(ALLOCATED(THWISEA)) DEALLOCATE(THWISEA)
        IF(ALLOCATED(P1SEA)) DEALLOCATE(P1SEA)
        IF(ALLOCATED(P2SEA)) DEALLOCATE(P2SEA)
        IF(ALLOCATED(SPRDSEA)) DEALLOCATE(SPRDSEA)
        IF(ALLOCATED(P1SWELL)) DEALLOCATE(P1SWELL)
        IF(ALLOCATED(P2SWELL)) DEALLOCATE(P2SWELL)
        IF(ALLOCATED(SPRDSWELL)) DEALLOCATE(SPRDSWELL)
        IF (ITEST.GE.3) THEN
          IF (ITESTB.GE.IG) THEN
            WRITE(IU06,*) '      SUB. OUTBS: DEALLOCATE OF ARRAYS FOR',
     &       ' INTEGRATED PARAMETERS DONE'
            CALL FLUSH(IU06)
          ENDIF
        ENDIF
      ENDIF

!*    5. OUTPUT OF SPECTRA FOR SATELLITE COLLOCATION.
!        --------------------------------------------

      IF (MARSTYPE.EQ.'an'.OR.MARSTYPE.EQ.'fg'.OR.MARSTYPE.EQ.'4v') THEN
        IF (CDTPRO.NE.CDATEA) THEN
          CALL OUTERS (FL3, IG, IGL, CDTPRO,
     &     NSTART,NEND,U10NEW,THWNEW,USNEW)
          IF (ITEST.GE.3) THEN
            IF (ITESTB.GE.IG) THEN
              WRITE(IU06,*) '      SUB. OUTBS: OUTPUT OF SPECTRA',
     &         ' FOR SATELLITE COLLOCATION DONE FOR ', CDTPRO
            ENDIF
          ENDIF
        ENDIF
      ENDIF

      RETURN
      END SUBROUTINE OUTBS
