      SUBROUTINE PREWIND (
     &                    LLINIT,
     &                    IREAD,
     &                    NFIELDS, NGPTOTG, NC, NR,
     &                    FIELDS, LWCUR, MASK_IN)


! ----------------------------------------------------------------------

!**** *PREWIND* - PREPARES WIND DATA FOR WAVE MODEL.

!     P.GROENWOUD     DELFT HYDRAULICS LABORATORY  OKTOBER 1986

!     E. BAUER        MPI       FEB 1987   VERSION FOR CDC 205 HAMBURG.

!     S. HASSELMANN   MPI       MAY 1987   COMBINED CDC 205 AND CRAY
!                                          VERSIONS.
!     W. BRUEGGEMANN  MPI      AUGUST 1988   SIMPLIFIED PROGRAM.

!     L. ZAMBRESKY    ECMWF    JUNE 1988   MODIFIED EXTENSIVELY FOR
!                                          COUPLING TO SPECTRAL MODEL.

!     H. GUNTHER      ECMWF    JUNE 1990   MODIFIED FOR CYCLE_4.

!     J. BIDLOT       ECMWF    FEBRUARY 1996 MESSAGE PASSING

!     S. ABDALLA      ECMWF    OCTOBER 2001  AIR DENSITY AND Zi/L

!*    PURPOSE.
!     --------

!       EVALUATE WIND SPEED AND DIRECTION AT WAVE MODEL GRID POINTS.

!**   INTERFACE.
!     ----------

!     *CALL* *PREWIND (
!    &                 LLINIT,
!    &                 IREAD,
!    &                 NFIELDS, NGPTOTG, NC, NR,
!    &                 FIELDS, LWCUR, MASK_IN)*

!      *LLINIT*    LOGICAL   TRUE IF WAMADSZIDL NEEDS TO BE CALLED.   
!      *IREAD*     INTEGER   PROCESSOR WHICH WILL ACCESS THE FILE ON DISK
!                            (IF NEEDED).
!      *NFIELDS*   INTEGER   NUMBER OF FIELDS HOLDING ATMOSPHERIC DATA
!      *NGPTOTG*   INTEGER   NUMBER OF ATMOSPHERIC GRID POINTS
!      *NC*        INTEGER   NUMBER OF ATM. COLUMNS OF LONGITUDE NEAR EQUATOR
!      *NR*        INTEGER   NUMBER OF ATM. ROWS OF LATITUDES
!      *FIELDS*    REAL      ATM. FIELDS (U10, V10, AIR DENSITY, Zi/L, U and V CURRENTS)
!      *LWCUR*     LOGICAL   INDICATES THE PRESENCE OF SURFACE U AND V CURRENTS
!      *MASK_IN*   INTEGER   MASK TO INDICATE WHICH PART OF FIELDS IS RELEVANT.

!       *UNIT* *DESCRIPTION*

!          IU01    INPUT WIND DATA (SUB READWIND).
!          IU06    PRINTER OUTPUT (SUB INITMDL).
!          IUVELO  OUTPUT OF BLOCKED WIND FIELDS. (SUB CREWFN).
!          IUSCR   SCRATCH UNITS FOR ALL BLOCKS (INTERMEDIATE STORAGE,
!                  INPUT/OUTPUT) (SUB INITMDL).

!     METHOD.
!     -------

!       INPUT WIND FIELDS WHICH CAN BE YOWPONENTS OF
!                USTAR, U10, USTRESS
!       ARE TRANSFORMED TO FRICTION VELOCITIES.
!       THE INPUT FIELDS HAVE TO BE ON A LAT /LONG GRID.
!       SEE SUB READWIND FOR FORMATS AND HEADER INFORMATION,
!       WHICH HAVE TO BE GIVEN TO THE PROGRAM.

!       A DOUBLE LINEAR INTERPOLATION IN SPACE IS PERFORMED
!       ONTO THE MODEL BLOCKS.
!       IF THE WIND OUTPUT TIMSTEP IS LESS THAN THE INPUT TIMESTEP
!       A LINEAR INTERPOLATION IN TIME IS PERFORMED.

!       THERE ARE TWO POSSIBILITIES WITH RESPECT TO THE WIND
!       OUTPUT FILES:

!           1. PROPAGATION TIMESTEP >= WIND INPUT STEP
!              ONE OUTPUT FILE CONTAINS IDELPRO/IDELWO WINDFIELDS
!              I.E. INFORMATION FOR ONE PROPAGATION TIMESTEP.
!              TIME FILE(I+1)= TIME FILE(I)+ IDELPRO

!           2. PROPAGATION TIMESTEP < INPUT WIND TIMESTEP
!              ONE OUTPUT FILE CONTAINS IDELWI/IDELWO WINDFIELDS
!              I.E. INFORMATION FOR ONE WIND INPUT TIMESTEP.
!              TIME FILE(I+1)= TIME FILE(I) + IDELWI

!     EXTERNALS.
!     ----------

!       *ABORT*     - TERMINATES PROCESSING.
!       *AIRSEA*    - SURFACE LAYER STRESS.
!       *CREWFN*    - CREATES A WIND FILE NAME.
!       *INCDAT*    - INCREMENTS DATE TIME GROUP.
!       *LOCINT*    - INTERPOLATES IN SPACE.
!       *NOTIM*     - STEERING SUB FOR INTERPOLATION IN SPACE ONLY.
!       *READWIND*   - READS A WIND FIELD.
!       *TIMIN*     - STEERING SUB FOR INTERPOLATION IN SPACE AND TIME.
!       *WAMWND*    - BLOCKS A WIND FIELD AND CONVERTS TO USTAR.

!     REFERENCE.
!     -----------

!       NONE.

! ----------------------------------------------------------------------

      USE YOWMPP   , ONLY : NINF     ,NSUP
      USE YOWPARAM , ONLY : NGX      ,NGY      ,NBLO     ,NFRE
      USE YOWSPEC  , ONLY : ROAIRO   ,ZIDLOLD
      USE YOWSTAT  , ONLY : CDATEA   ,CDATEE   ,IDELPRO  ,IDELWI   ,
     &            IDELWO   ,LANAONLY
      USE YOWTEST  , ONLY : IU06     ,ITEST
      USE YOWWIND  , ONLY : CDA      ,CDAWIFL  ,FIELDG
      USE YOWCOUP  , ONLY : LWNEMOCOU,LWNEMOCOURECV
      USE YOWTEXT  , ONLY : LRESTARTED
      USE YOMHOOK   ,ONLY : LHOOK,   DR_HOOK
      INTEGER NFIELDS, NGPTOTG, NC, NR
      REAL FIELDS(NGPTOTG,NFIELDS)
      LOGICAL :: LWCUR
      INTEGER MASK_IN(NGPTOTG)

      CHARACTER*14 CDTWIE, CDTWIS, ZERO

      LOGICAL LLFRST,LLFRSTNEMO
      LOGICAL :: LLINIT
      DATA LLFRST / .TRUE. /
      DATA LLFRSTNEMO / .TRUE. /
      REAL ZHOOK_HANDLE

! ----------------------------------------------------------------------
      IF (LHOOK) CALL DR_HOOK('PREWIND',0,ZHOOK_HANDLE)

!*    1. BEGIN AND END DATES OF WIND FIELDS TO BE PROCESSED.
!        ---------------------------------------------------

      ZERO = ' '

      IF (CDA.EQ.ZERO.OR.LANAONLY) THEN

!        IF START FROM PRESET FIELDS DO FIRST FIELD IN ADDITION.

        IF (ITEST.GE.2) THEN
          WRITE(IU06,*) "  PREWIND AT CDATEA = ", CDATEA 
          CALL FLUSH (IU06)
        ENDIF
        CDTWIS = CDATEA
      ELSE
        CDTWIS = CDAWIFL
        IDELWH = -MAX(IDELPRO,IDELWI)+IDELWO
        CALL INCDATE (CDTWIS,IDELWH)
      ENDIF

      IF(CDAWIFL.LT.CDATEE) THEN
        CDTWIE = CDAWIFL
        LLFRST = .FALSE.
      ELSE
        CDTWIE = CDATEE
      ENDIF
! ----------------------------------------------------------------------

!*    2. PROCESS FORCING FIELDS.
!        -----------------------

!*    2.0 GLOBAL FIELD FOR THE INPUTS
!         ---------------------------

      ALLOCATE(FIELDG(NGX,NGY))


!     2.1 IN COUPLED RUNS, TRANSFORM INPUT FORCING FIELDS TO WAM GRID.
!         -----------------------------------------------------------

      CALL IFSTOWAM (NFIELDS, NGPTOTG, NC, NR,
     &               FIELDS, LWCUR, MASK_IN)

!     2.1.1 GET DATA FROM NEMO.
!           ------------------
!
!     IF RESTART DO NOT CALL RECVNEMOFIELDS AT THE FIRST TIME STEP
!     BUT USE THE VALUES FROM THE RESTART.
!      
      IF(LWNEMOCOU.AND.LWNEMOCOURECV) THEN
        CALL RECVNEMOFIELDS(LLFRSTNEMO.AND.LRESTARTED,
     &                      LLFRSTNEMO.AND..NOT.LRESTARTED)
        LLFRSTNEMO=.FALSE.
      ENDIF

!!!   WHEN COUPLED, IT IS ALSO NEEDED TO INITIALISE THE AIR DENSITY AND
!!!   THE CONVECTIVE VELOCITY SCALE ARRAYS SINCE THESE ARE NOT (YET) PROVIDED
!!!   AS PART OF THE GRIB RESTART FILES.
      IF (LLINIT) CALL WAMADSZIDL(ROAIRO,ZIDLOLD)


!     2.2 GET SURFACE CURRENTS TO WAM BLOCK STRUCTURE (if needed) 
!         -------------------------------------------

      CALL GETCURR(LWCUR, IREAD)


!*    PROCESS THE OTHER FORCING FIELDS.
!     ---------------------------------

      IF (IDELWO.GE.IDELWI) THEN

!*    2.2 NO TIME INTERPOLATION.
!         ----------------------

        IF (ITEST.GE.2) THEN
          WRITE (IU06,*) '   SUB. PREWIND: WIND REQUEST'
          WRITE (IU06,*) '     NO TIME INTERPOLATION'
          WRITE (IU06,*) '     START OF PERIOD IS    CDTWIS = ',CDTWIS
          WRITE (IU06,*) '     END   OF PERIOD IS    CDTWIE = ',CDTWIE
          WRITE (IU06,*) '     WIND INPUT TIME STEP  IDELWI = ',IDELWI
          WRITE (IU06,*) '     WIND OUTPUT TIME STEP IDELWO = ',IDELWO
          CALL FLUSH (IU06)
        ENDIF
        CALL NOTIM (CDTWIS, CDTWIE, IREAD, LWCUR)
      ELSE

!*    2.3 TIME INTERPOLATION.
!         -------------------

        IF (ITEST.GE.2) THEN
          WRITE (IU06,*) '   SUB. PREWIND: WIND REQUEST'
          WRITE (IU06,*) '     TIME INTERPOLATION'
          WRITE (IU06,*) '     START OF PERIOD IS    CDTWIS = ',CDTWIS
          WRITE (IU06,*) '     END   OF PERIOD IS    CDTWIE = ',CDTWIE
          WRITE (IU06,*) '     WIND INPUT TIME STEP  IDELWI = ',IDELWI
          WRITE (IU06,*) '     WIND OUTPUT TIME STEP IDELWO = ',IDELWO
          CALL FLUSH (IU06)
        ENDIF
        CALL TIMIN (CDTWIS, CDTWIE, IREAD, LWCUR)
      ENDIF


!*    2.5 DEALLOCATE GRID ARRAYS FOR INPUT FORCING FIELDS
!         -----------------------------------------------

      DEALLOCATE(FIELDG)

      IF (LHOOK) CALL DR_HOOK('PREWIND',1,ZHOOK_HANDLE)

      RETURN

      END SUBROUTINE PREWIND
