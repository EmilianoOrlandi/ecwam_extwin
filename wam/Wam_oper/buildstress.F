      SUBROUTINE BUILDSTRESS(U10OLD,THWOLD,USOLD,TAUW,Z0OLD,
     &                       ROAIRO, ZIDLOLD, CICOVER, CITHICK,
     &                       IREAD)

! ----------------------------------------------------------------------
!     J. BIDLOT    ECMWF   APRIL 1998 

!     J. BIDLOT    ECMWF   FEBRUARY 1999 TAUT --> SQRT(TAUT)

!     S. ABDALLA   ECMWF   OCTOBER 1999 MODIFICATION THE CALL TO GETWND
 
!     J. BIDLOT    ECMWF   AUGUST 2008 : MAKE IT MORE PARALLEL.

!*    PURPOSE.
!     --------
!     CREATES WIND AND STRESS FIELDS FROM GRIB WINDS AND CD.

!**   INTERFACE.
!     ----------
!     CALL *BUILDSTRESS*(U10OLD,THWOLD,USOLD,TAUW,Z0OLD,ROAIRO,
!    &                   ROAIRO, ZIDLOLD, CICOVER, CITHICK,
!    &                   IREAD)*
!     *U10OLD*   WIND SPEED.
!     *THWOLD*   WIND DIRECTION (RADIANS).
!     *USOLD*    FRICTION VELOCITY.
!     *TAUW*     WAVE STRESS.
!     *Z0OLD*    ROUGHNESS LENGTH IN M.
!     *RAD0OLD*   AIR DENSITY IN KG/M3.
!     *RZIDL0OLD* Zi/L (Zi: INVERSION HEIGHT, L: MONIN-OBUKHOV LENGTH).
!     *CICOVER*   SEA ICE COVER.
!     *CITHICK*   SEA ICE THICKNESS.
!     *IREAD*     PROCESSOR WHICH WILL ACCESS THE FILE ON DISK

!     METHOD.
!     -------

!     EXTERNALS.
!     ----------
!     *ABORT1*
!     *AIRSEA*
!     *GETWND*
!     *PBOPEN*
!     *PBREAD*
!     *PBCLOSE*
!     *READWGRIB*

!     REFERENCE.
!     ----------
!     NONE
! ----------------------------------------------------------------------

      USE YOWCOUP  , ONLY : LWCOU    ,ALPHA    ,XKAPPA   ,XNLEV
      USE YOWGRID  , ONLY : IGL      ,IJS      ,IJL
      USE YOWMPP   , ONLY : NINF     ,NSUP
      USE YOWMESPAS, ONLY : LMESSPASS,LNOCDIN  ,LWAVEWIND
      USE YOWPARAM , ONLY : NBLO     ,NIBLO    ,NGX      ,NGY
      USE YOWPCONS , ONLY : G        ,ROAIR    ,EPSUS    ,EPSU10
      USE YOWSTAT  , ONLY : CDATEA   ,CDTPRO   ,NWAM_BLKS
      USE YOWTABL  , ONLY : ITAUMAX  ,JUMAX    ,JPLEVT   ,TAUT
      USE YOWTEST  , ONLY : IU06     ,ITEST
      USE YOWWIND  , ONLY : CDAWIFL  ,CDATEWO  ,CDATEFL  ,FIELDG

      USE YOMHOOK   ,ONLY : LHOOK,   DR_HOOK

! ----------------------------------------------------------------------
      REAL,DIMENSION(NINF:NSUP,NBLO) :: U10OLD,THWOLD,USOLD,Z0OLD,TAUW,
     &                                  ROAIRO,ZIDLOLD,CICOVER,CITHICK
      INTEGER IREAD
      INTEGER MIJS,MIJL
! Mod for OPENMP
      INTEGER JKGLO,KIJS,KIJL,NPROMA
! End Mod for OPENMP
      REAL ZHOOK_HANDLE
      REAL, ALLOCATABLE :: CD(:,:), TEMPTAUT(:,:,:)
      CHARACTER*24 FILNM
      LOGICAL :: LLONLYPOS
      LOGICAL LWNDFILE, LCLOSEWND
      LOGICAL LCR
! ----------------------------------------------------------------------

      IF (LHOOK) CALL DR_HOOK('BUILDSTRESS',0,ZHOOK_HANDLE)

      CDATEWO = ' '
      CDAWIFL = ' '
      CDATEFL = ' '
      CDTPRO = CDATEA
      LCR=.FALSE.

!     1.1 GET ATMOSPHERIC MODEL FORCINGS FIELDS 
!         -------------------------------------

      ILEN=1
      LWNDFILE=.TRUE.
      LCLOSEWND=.TRUE.

!     GETWND REQUIRES FIELDG TO BE ALLOCATED !
      ALLOCATE(FIELDG(NGX,NGY))
      CALL GETWND (U10OLD, THWOLD, ROAIRO, ZIDLOLD, CICOVER, CITHICK,
     &             CDTPRO, LWNDFILE, LCLOSEWND, IREAD,
     &             LCR)
      DEALLOCATE(FIELDG)
      IF (ITEST.GT.0) WRITE (IU06,*) ' SUB. GETWND DONE'



!     1.2 USE DATA FROM A FILE CONTAINING WIND SPEED MODIFIED BY
!         ----------------------------------------------------
!     A PREVIOUS WAVE MODEL RUN ON WHICH THIS RESTART IS BASED
!     IF IT EXISTS, OTHERWISE IT WILL USE THE INFORMATION FROM
!     THE ATMOSPHERIC MODEL WIND SPEED ARCHIVE.

      LWAVEWIND=.FALSE.

      FILNM='uwavein'
      LIU = LEN_TRIM(FILNM)
      FILNM=FILNM(1:LIU)
      INQUIRE(FILE=FILNM,EXIST=LWAVEWIND)

      IF(LWAVEWIND) THEN

        IPARAM=245
        LLONLYPOS=.FALSE.
        CALL READWGRIB(IU06,FILNM,IPARAM,CDTPRO,U10OLD,
     &                 KZLEVUWAVE, LLONLYPOS, IREAD)
        IF (ITEST.GT.0) WRITE (IU06,*) ' SUB. READWGRIB DONE FOR ',FILNM

        WRITE(IU06,*) ' '
        WRITE(IU06,*) ' A DATA FILE CONTAINING WIND SPEED INFORMATION'
        WRITE(IU06,*) ' AS PROVIDED BY A PREVIOUS WAVE MODEL RUN'
        WRITE(IU06,*) ' WAS USED TO UPDATE THE INPUT ATMOSPHERIC WINDS'
        WRITE(IU06,*) ' '
        WRITE(IU06,*) ' THE INPUT WINDS AND DRAG COEFFICIENT ARE FOUND'
        WRITE(IU06,*) ' TO HAVE BEEN DETERMINED FOR HEIGHT AT ',
     &                  KZLEVUWAVE,' m'
        IF (ITEST.GT.0) CALL FLUSH(IU06) 

        ILEV=1

      ELSE

        ILEV=1
        KZLEVUWAVE=10
        WRITE(IU06,*) ' '
        WRITE(IU06,*) '          !!!! NOTE !!!!'
        WRITE(IU06,*) ' '
        WRITE(IU06,*) ' NO INFORMATION ON WIND SPEEDS FROM THE'
        WRITE(IU06,*) ' WAVE MODEL WAS PROVIDED'
        WRITE(IU06,*) ' NO UPDATE OF THE INPUT ATMOSPHERIC WINDS'
        WRITE(IU06,*) ' WAS POSSIBLE'
        WRITE(IU06,*) ' '
        WRITE(IU06,*) ' THE INPUT WIND AND DRAG COEFFICIENT ARE ASSUMED'
        WRITE(IU06,*) ' TO HAVE BEEN DETERMINED FOR HEIGHT AT ',
     &                  KZLEVUWAVE,' m'

        IF (ITEST.GT.0) CALL FLUSH(IU06) 
      ENDIF
 
!     TEST WHETHER THE HEIGHT OF THE INPUT WINDS IS THE SAME AS DEFINED
!     FOR THE REST OF THE RUN (SEE CALL TO STRESS IN PREPROC). IF NOT
!     RECOMPUTE THE TABLE. THE ORIGINAL TABLE WILL BE SWAP BACK AT THE
!     END OF THE ROUTINE.

      IF (KZLEVUWAVE.NE.NINT(XNLEV(1))) THEN
        WRITE(IU06,*) ' '
        WRITE(IU06,*) ' THE REFERENCE HEIGHT TO BE USED IN WAMODEL'
        WRITE(IU06,*) ' ',XNLEV(1) 
        WRITE(IU06,*) ' IS DIFFERENT THAN THE INPUT FIELDS HEIGHT'
        WRITE(IU06,*) ' ',FLOAT(KZLEVUWAVE)
        WRITE(IU06,*) ' THE NECESSARY ADJUSTMENTS WILL BE MADE'
        WRITE(IU06,*) ' TO DETERMINE THE INITIAL FIELDS.'
        WRITE(IU06,*) ' '
        IF (ITEST.GT.0) CALL FLUSH(IU06) 

        ALLOCATE(TEMPTAUT(0:ITAUMAX,0:JUMAX,JPLEVT))
        TEMPTAUT=TAUT
        TEMPXNLEV=XNLEV(1)
        XNLEV(1)=KZLEVUWAVE

        CALL STRESS(IU06,ITEST)
        IF (ITEST.GE.2)
     1    WRITE(IU06,*) ' SUB. BUILDSTRESS: CALL STRESS DONE'
        IF (ITEST.GT.0) CALL FLUSH(IU06) 

      ENDIF

      IF(.NOT.ALLOCATED(CD)) ALLOCATE(CD(NINF:NSUP,NBLO))

!     1.3 INITIALISE CD USING THE FRICTION VELOCITY FOR TAUW=0.
!         ----------------------------------------------------

      DO IG=1,IGL
        MIJS=IJS(IG)
        MIJL=IJL(IG)
! Mod for OPENMP
        NPROMA=(MIJL-MIJS+1)/NWAM_BLKS+1
        CALL GSTATS(1444,0)
!$OMP   PARALLEL DO SCHEDULE(DYNAMIC,1) 
!$OMP+  PRIVATE(JKGLO,KIJS,KIJL,IJ,CDINV)
        DO JKGLO=MIJS,MIJL,NPROMA
          KIJS=JKGLO
          KIJL=MIN(KIJS+NPROMA-1,MIJL)

          DO IJ=KIJS,KIJL
            TAUW(IJ,IG)=0.
          ENDDO

          CALL AIRSEA (U10OLD(KIJS,IG),TAUW(KIJS,IG),USOLD(KIJS,IG),
     &                 Z0OLD(KIJS,IG), KIJS, KIJL, ILEV)

          DO IJ=KIJS,KIJL
!!          THE NUMERICAL RELATION BETWEEN USOLD AND U10OLD SHOULD
!!          ALWAYS BE AS IN OUTGRID
            CDINV = MAX(U10OLD(IJ,IG)**2,EPSU10)/
     &              MAX(USOLD(IJ,IG)**2,EPSUS)
            CDINV = MIN(CDINV,10000.) 
            CD(IJ,IG) = 1./CDINV
          ENDDO
        ENDDO
!$OMP   END PARALLEL DO
        CALL GSTATS(1444,1)
        IF (ITEST.GT.0) WRITE (IU06,*) ' SUB. AIRSEA DONE AT 1'
      ENDDO

!     1.4  GET DRAG COEFFICIENT
!          --------------------
      IF(.NOT.LNOCDIN) THEN
        IPARAM=233
        LLONLYPOS=.TRUE.
        FILNM='cdwavein'
        CALL READWGRIB(IU06,FILNM,IPARAM,CDTPRO,CD,
     &                 KZLEVCD, LLONLYPOS, IREAD)
        IF (ITEST.GT.0) WRITE (IU06,*) ' SUB. READWGRIB DONE FOR ',FILNM

!       TEST REFERENCE LEVEL FOR UWAVE AND CD

        IF(KZLEVUWAVE.NE.0.AND.KZLEVCD.NE.0) THEN
          IF(KZLEVUWAVE.NE.KZLEVCD) THEN
            WRITE(IU06,*)'************************************'
            WRITE(IU06,*)'*                                  *'
            WRITE(IU06,*)'* FATAL ERROR IN SUB BUILDSTRESS   *'
            WRITE(IU06,*)'* ==============================   *'
            WRITE(IU06,*)'* REFERENCE LEVEL FOR CD AND UWAVE *'
            WRITE(IU06,*)'* DIFFER. PROGRAM WILL ABORT       *'
            WRITE(IU06,*)'* REF. LEVEL CD = ',KZLEVCD
            WRITE(IU06,*)'* REF. LEVEL UWAVE = ',KZLEVUWAVE
            WRITE(IU06,*)'*                                  *'
            WRITE(IU06,*)'************************************'
            CALL ABORT1
          ENDIF
        ENDIF



!       1.5 COMPUTE TAUW,USOLD AND Z0OLD
!           ----------------------------

        ILEV=1

        DO IG=1,IGL
          MIJS=IJS(IG)
          MIJL=IJL(IG)
! Mod for OPENMP
          NPROMA=(MIJL-MIJS+1)/NWAM_BLKS+1
          CALL GSTATS(1444,0)
!$OMP     PARALLEL DO SCHEDULE(DYNAMIC,1) 
!$OMP+    PRIVATE(JKGLO,KIJS,KIJL,IJ,CDSQRTINV,CHARNOCK)
          DO JKGLO=MIJS,MIJL,NPROMA
            KIJS=JKGLO
            KIJL=MIN(KIJS+NPROMA-1,MIJL)
            DO IJ=KIJS,KIJL
              CDSQRTINV = MIN(1./SQRT(CD(IJ,IG)),100.0)
              Z0OLD(IJ,IG) = XNLEV(ILEV)*EXP(-XKAPPA*CDSQRTINV)
!!            USOLD WILL FIRST CONTAIN ITS SQUARE
!!            THE NUMERICAL RELATION BETWEEN USOLD AND U10OLD SHOULD
!!            ALWAYS BE AS IN OUTGRID
              USOLD(IJ,IG) = CD(IJ,IG)*MAX(U10OLD(IJ,IG)**2,EPSU10)
              USOLD(IJ,IG) = MAX(USOLD(IJ,IG),EPSUS)
              CHARNOCK = G*Z0OLD(IJ,IG)/USOLD(IJ,IG)
              CHARNOCK = MAX(CHARNOCK,ALPHA)
              TAUW(IJ,IG) = USOLD(IJ,IG)*(1.-(ALPHA/CHARNOCK)**2)
              USOLD(IJ,IG) = SQRT(USOLD(IJ,IG))
            ENDDO
          ENDDO
!$OMP     END PARALLEL DO
          CALL GSTATS(1444,1)
        ENDDO
      ENDIF

      IF(ALLOCATED(CD)) DEALLOCATE(CD)

      IF(ALLOCATED(TEMPTAUT)) THEN
        XNLEV(1)=TEMPXNLEV
        TAUT=TEMPTAUT
        DEALLOCATE(TEMPTAUT)
      ENDIF

      IF (ITEST.GE.1)
     &    WRITE(IU06,*) ' SUB. BUILDSTRESS: INPUT OF RESTART FILES DONE'

      IF (LHOOK) CALL DR_HOOK('BUILDSTRESS',1,ZHOOK_HANDLE)

      RETURN
      END SUBROUTINE BUILDSTRESS
