      SUBROUTINE MPGATHERSCFLD(IRECV,ITAG,NSTART,NEND,FIELD) 

!****  *MPGATHERSCFLD* - GATHER SCALAR BLOCK DATA FIELD ONTO A SINGLE 
!****                    PROCESS 

!     J. BIDLOT    ECMWF   APRIL 1996  MESSAGE PASSING

!     PURPOSE.
!     --------

!     GATHER SCALAR BLOCK DATA CONTAINED IN ARRAY FIELD DISTRIBUTED ACROSS THE
!     DIFFERENT PROCESSES ONTO THE SINGLE PROCESS IRECV

!*    INTERFACE.
!     ----------

!     CALL *MPGATHERSCFLD*(IRECV,ITAG,NSTART,NEND,FIELD) 

!     *IRECV*     RANK OF THE PROCESS ONTO WHICH FIELD IS COLLECTED 
!     *ITAG*      TAG ASSOCIATED WITH A PARTICULAR CALL TO SUBROUTINE
!                 THIS IS NECESSARY TO DIFFERENTIATE THE DIFFERENT CALLS 
!                 THE USE OF A SEPARATE TAG FOR EACH SPECIFIC CALL SHOULD
!                 ENSURE THAT NO CONFLICT ARISES BETWEEN DIFFERENT MESSAGES
!     *NSTART*    INDEX OF THE FIRST POINT OF THE SUB GRID DOMAIN
!     *NEND*      INDEX OF THE LAST POINT OF THE SUB GRID DOMAIN
!     *FIELD*     INPUT/OUTPUT ARRAY CONTAINING THE FIELD

!     METHOD.
!     -------
!     MPE SEND OF ARRAY FIELD TO PROCESS CORRESPONDING TO IRECV FOR
!     ALL PROCESS EXCEPT FOR THE PROCESS CORRESPONDING TO IRECV
!     WHERE IT IS RECEIVED.

!     EXTERNALS.
!     ----------
!     MPE PACKAGE :
!         MPE_SEND
!         MPE_RECV
!         MPEI_ABORT 

!     REFERENCES.
!     -----------
!         NONE
! -------------------------------------------------------------------


      USE YOWPARAM , ONLY : NIBLO
      USE YOWMPP   , ONLY : IRANK    ,NPROC    ,MPMAXLENGTH



!----------------------------------------------------------------------
!     ALLOCATABLE ARRAYS THAT ARE PASSED AS SUBROUTINE ARGUMENTS

      INTEGER,DIMENSION(NPROC) :: NSTART,NEND
      REAL,DIMENSION(NIBLO) :: FIELD
!----------------------------------------------------------------------

      REAL,DIMENSION(MPMAXLENGTH) :: ZCOMBUF

      IF((IRECV.EQ.0).OR.(NPROC.EQ.1)) THEN
        RETURN
      ELSEIF(IRANK.NE.IRECV) THEN
!     1.1 SEND TO THE PROCESS THAT GATHERS THE WHOLE FIELD
!         ------------------------------------------------
        KCOUNT=0
        DO IJ=NSTART(IRANK),NEND(IRANK)
          KCOUNT=KCOUNT+1
          ZCOMBUF(KCOUNT)=FIELD(IJ)
        ENDDO
        CALL MPE_SEND(ZCOMBUF,MPMAXLENGTH,2,IRECV,ITAG,0,0,0,IERR)
        IF(IERR.LT.0) CALL MPEI_ABORT
     &   ('MPE_SEND ERROR in MPGATHERSCFLD' )

      ELSE
!     1.2 RECEIVE CONTRIBUTION TO THE FIELD FROM THE OTHER PROCESSES
!         ---------------------------------------------------------- 
        DO IP=1,NPROC-1
          CALL MPE_RECV(ZCOMBUF,MPMAXLENGTH,2,-1,ITAG,0,0,0,
     &     KRCOUNT,KRFROM,KRTAG,IERR)
          IF(IERR.LT.0) CALL MPEI_ABORT
     &     ('MPE_RECV ERROR in MPGATHERSCFLD' )
          IF(KRTAG.NE.ITAG) CALL MPEI_ABORT
     &     ('MPE_RECV ERROR in MPGATHERSCFLD MISMATCHED TAGS' )

          KCOUNT=0
          DO IJ=NSTART(KRFROM),NEND(KRFROM)
            KCOUNT=KCOUNT+1
            FIELD(IJ)=ZCOMBUF(KCOUNT)
          ENDDO 
        ENDDO
      ENDIF

      RETURN
      END SUBROUTINE MPGATHERSCFLD
