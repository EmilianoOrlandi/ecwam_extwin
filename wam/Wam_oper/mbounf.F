      SUBROUTINE MBOUNF (IU03, IU10, IU20, IFORM, IINPC)

C ----------------------------------------------------------------------
C
C**** *MBOUNF* - MAKE FINE GRID BOUNDARY.
C
C     R. PORTZ     MPI         15/01/1991
C
C*    PURPOSE.
C     -------
C
C       COMPUTE ALL INFORMATION FOR FINE GRID BOUNDARY VALUE
C       INPUT (COMMON FBOUND).
C
C**   INTERFACE.
C     ----------
C
C       *CALL* *MBOUNF (IU03, IU10, IU20, IFORM, IINPC)
C          *IU03*  -  INPUT UNIT OF COARSE GRID BOUNDARY INFORMATION
C                     COMMON CBOUND GENERATED BY A COARSE GRID PREPROC
C                     (UNFORMATED).
C          *IU10*   - LOGICAL OUTPUT UNIT FOR  UNFORMATED WRITE OF
C                     COMMON FBOUND.
C          *IU20*   - LOGICAL OUTPUT UNIT FOR    FORMATED WRITE OF
C                     COMMON FBOUND.
C          *IFORM*  - FORMAT OPTION  = 1  UNFORMATED WRITE/READ.
C                                    = 2  FORMATED WRITE/READ
C                                    OTHERWISE WRITE BOTH
C                                              READ UNFORMATED.
C          *IINPC*  - NUMBER OF INPUT POINTS FROM COARSE GRID.
C
C     METHOD.
C     -------
C
C       NONE.
C
C     EXTERNALS.
C     ----------
C
C       *ABORT1*     - TERMINATES PROCESSING.
C       *FINDB*     - FIND BLOCK AND SEA POINT NUMBERS.
C       *MBOXB*     - FIND LAT AND LONG OF BOUNDARY POINTS.
C       *MINTF*     - MAKES INTERPOLATION TABLE FOR FINE TO COARSE GRID.
C       *PACKI*     - PACKS AN INTEGER ARRAY.
C       *PACKC*     - PACKS A  REAL    ARRAY.
C
C     REFERENCE.
C     ----------
C
C       NONE.
C
C ----------------------------------------------------------------------
C
#include "param.h"
C
#include "parameter_preproc.h"
C
#include "comcpbo.h"
C
#include "comfpbo.h"
C
#include "commap.h"
C
#include "comgrid.h"
C
#include "comtest.h"
C
C ----------------------------------------------------------------------
C
      DIMENSION BLATF(NBMAX), BLNGF(NBMAX)
C
C ----------------------------------------------------------------------
C
  998 FORMAT(10I8)
  999 FORMAT(5E16.7)
C
C ----------------------------------------------------------------------
C
C*    1. INITIAL.
C     -----------
C
 1000 CONTINUE
      DO 1001 I = 1,NBMAX
         IJARF(I) = 0
         IGARF(I) = 0
         IBFL (I) = 0
         IBFR (I) = 0
         BFW  (I) = 0.
         BLATF(I) = 0.
         BLNGF(I) = 0.
 1001 CONTINUE
C
C ----------------------------------------------------------------------
C
C*    2. READ COMMON BOUNDC
C     ---------------------
C
 2000 CONTINUE
      IF (IFORM.NE.2) THEN
         READ (IU03) NBOUNC
         READ (IU03) (IGARC(I),I=1,NBOUNC), (IJARC(I),I=1,NBOUNC)
         READ (IU03) DLAMAC, DPHIAC, AMOSOA, AMONOA, AMOEAA, AMOWEA,
     1                (BLNGC(I),I=1,NBOUNC), (BLATC(I),I=1,NBOUNC)
      ELSE
         READ (IU03,998) NBOUNC
         READ (IU03,998) (IGARC(I),I=1,NBOUNC), (IJARC(I),I=1,NBOUNC)
         READ (IU03,999) DLAMAC,DPHIAC, AMOSOA, AMONOA, AMOEAA, AMOWEA,
     1                   (BLNGC(I),I=1,NBOUNC), (BLATC(I),I=1,NBOUNC)
      ENDIF
      IINPC = NBOUNC
C
C ----------------------------------------------------------------------
C
C*    3. CHECK THE INPUT
C     ------------------
C
C     IS THE FINE GRID THE SAME AS IN THE COURSE GRID ?
C
      IF (AMOWEP.NE.AMOWEA .OR. AMOEAP.NE.AMOEAA .OR.
     +    AMONOP.NE.AMONOA .OR. AMOSOP.NE.AMOSOA) THEN
          WRITE(IU06,*) '***********************************'
          WRITE(IU06,*) '*                                 *'
          WRITE(IU06,*) '*  FATAL ERROR IN SUB. MBOUNF     *'
          WRITE(IU06,*) '*  ==========================     *'
          WRITE(IU06,*) '*                                 *'
          WRITE(IU06,*) '*  THIS IS NOT THE SAME GRID      *'
          WRITE(IU06,*) '*  AS YOU HAD DELARED IN THE      *'
          WRITE(IU06,*) '*  COURSE GRID                    *'
          WRITE(IU06,*) '*                                 *'
          WRITE(IU06,*) '*  AMOSOP: ', AMOSOP, ' AMOSOA: ', AMOSOA
          WRITE(IU06,*) '*  AMONOP: ', AMONOP, ' AMONOA: ', AMONOA
          WRITE(IU06,*) '*  AMOWEP: ', AMOWEP, ' AMOWEA: ', AMOWEA
          WRITE(IU06,*) '*  AMOEAP: ', AMOEAP, ' AMOEAA: ', AMOEAA
          WRITE(IU06,*) '*                                 *'
          WRITE(IU06,*) '*     THE PROGRAM ABORTS          *'
          WRITE(IU06,*) '***********************************'
          CALL ABORT1
      ENDIF
C
C     IS THE STEP OF LAT. AND LONG. OF THE FINE GRID A MULTIPLE
C              OF THE COURSE GRID ?
C
      IF (MOD(DPHIAC,XDELLA).NE.0.) THEN
          WRITE(IU06,*) '***********************************'
          WRITE(IU06,*) '*                                 *'
          WRITE(IU06,*) '*  FATAL ERROR IN SUB. MBOUNF     *'
          WRITE(IU06,*) '*  --------------------------     *'
          WRITE(IU06,*) '*                                 *'
          WRITE(IU06,*) '*  THE STEP OF THE LAT. OF THE    *'
          WRITE(IU06,*) '*  FINE GRID IS NOT A MULTIPLE    *'
          WRITE(IU06,*) '*  OF THE COURSE GRID             *'
          WRITE(IU06,*) '*                                 *'
          WRITE(IU06,*) '*  FINE GRID XDELLA: ', XDELLA
          WRITE(IU06,*) '*  COARSE GRID DPHIAC: ', DPHIAC
          WRITE(IU06,*) '*                                 *'
          WRITE(IU06,*) '*     THE PROGRAM ABORTS          *'
          WRITE(IU06,*) '***********************************'
          CALL ABORT1
      ENDIF
C
      IF (MOD(DLAMAC,XDELLO).NE.0.) THEN
          WRITE(IU06,*) '***********************************'
          WRITE(IU06,*) '*                                 *'
          WRITE(IU06,*) '*  FATAL ERROR IN SUB. MBOUNF     *'
          WRITE(IU06,*) '*  ==========================     *'
          WRITE(IU06,*) '*                                 *'
          WRITE(IU06,*) '*  THE STEP OF THE LON. OF THE    *'
          WRITE(IU06,*) '*  FINE GRID IS NOT A MULTIPLE    *'
          WRITE(IU06,*) '*  OF THE COURSE GRID             *'
          WRITE(IU06,*) '*                                 *'
          WRITE(IU06,*) '*  FINE GRID   XDELLO: ', XDELLO
          WRITE(IU06,*) '*  COARSE GRID DLAMAC: ', DLAMAC
          WRITE(IU06,*) '*                                 *'
          WRITE(IU06,*) '*     THE PROGRAM ABORTS          *'
          WRITE(IU06,*) '***********************************'
          CALL ABORT1
      ENDIF
C
C ----------------------------------------------------------------------
C
C*    4. COMPUTED THE SQUARE BOX
C     --------------------------
C
 4000 CONTINUE
      CALL MBOXB (NBOUNF, AMOWEP, AMOSOP, AMOEAP, AMONOP, BLATF, BLNGF)
C
C ----------------------------------------------------------------------
C
C*    5. SEARCH BLOCK NUMBER AND SEA POINT NUMBER.
C        -----------------------------------------
 5000 CONTINUE
      CALL FINDB (NBMAX, NBOUNF, BLATF, BLNGF, IGARF, IJARF)
C
C ----------------------------------------------------------------------
C
C*    6. MAKE INTERPOLATED ARRAYS
C     ----------------------------
C
 6000 CONTINUE
      CALL MINTF
C
C ----------------------------------------------------------------------
C
C*    7. PACKED ALL ARRAYS
C     --------------------
C
 7000 CONTINUE
      CALL PACKR (NBOUNF, NBOUNEW, NBMAX, IGARF, BLNGF)
      CALL PACKR (NBOUNF, NBOUNEW, NBMAX, IGARF, BLATF)
      CALL PACKR (NBOUNF, NBOUNEW, NBMAX, IGARF, BFW)
      CALL PACKI (NBOUNF, NBOUNEW, NBMAX, IGARF, IBFR)
      CALL PACKI (NBOUNF, NBOUNEW, NBMAX, IGARF, IJARF)
      CALL PACKI (NBOUNF, NBOUNEW, NBMAX, IGARF, IGARF)
      NBOUNF = NBOUNEW
C
C ----------------------------------------------------------------------
C
C*    8. PRINTER PROTOCOL.
C        -----------------
C
 8000 CONTINUE
      WRITE (IU06,'(''1BOUNDARY INPUT POINTS FOR THIS GRID:'')')
      WRITE (IU06,*) '===================================='
      WRITE (IU06,*) '  NUMBER OF BOUNDARY POINTS IS NBOUNF = ', NBOUNF
      WRITE (IU06,*) '        |-----FINE GRID INPUT POINTS-----|',
     1              '-RELATED COURSE GRID INDICES--|'
      WRITE (IU06,*) '      NO.    LAT.   LONG.  BLOCK.  POINT. ',
     +              '   LEFT   RIGHT   WEIGHT '
C
      DO 8001 IO = 1, NBOUNF
         WRITE (IU06,'(4X,I5,2F8.2,4I8,F10.4)')
     +     IO, BLATF(IO), BLNGF(IO), IGARF(IO), IJARF(IO),
     +     IBFL(IO), IBFR(IO), BFW(IO)
 8001 CONTINUE
C
C ----------------------------------------------------------------------
C
C*    9. WRITE COMMON FBOUND
C
 9000 CONTINUE
      IF (IFORM.NE.2) THEN
         WRITE(IU10) NBOUNF
         WRITE(IU10) (IGARF(I),I=1,NBOUNF), (IJARF(I),I=1,NBOUNF),
     1                (IBFL(I),I=1,NBOUNF), (IBFR(I),I=1,NBOUNF),
     2                (BFW(I),I=1,NBOUNF)
      ENDIF
      IF (IFORM.NE.1) THEN
         WRITE(IU20,998) NBOUNF
         WRITE(IU20,998) (IGARF(I),I=1,NBOUNF), (IJARF(I),I=1,NBOUNF),
     1                    (IBFL(I),I=1,NBOUNF), (IBFR(I),I=1,NBOUNF)
         WRITE(IU20,999) (BFW(I),I=1,NBOUNF)
      ENDIF
C
      RETURN
      END
