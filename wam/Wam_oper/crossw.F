      SUBROUTINE CROSSW(
!             DIMENSIONS
     &          NSPECS ,NSPECW ,MPART, JPSIW, 
     &          NPARTW, NPARTS ,MAXMPART, 
!             INPUT
     &          DISMIN,
     &          NSIW1D, NTOSIW1D,
     &          XMEANANGS, XMEANFRES ,
     &          XMEANEW , XMEANANGW, XMEANFREW ,
     &          CONTROL,
!             OUTPUT
     &          NPASC2W, CORRELTAS, EP, XKP, YKP) 

!-----------------------------------------------------------------------

!     PURPOSE:
!     --------

!     CROSSASSIGN WAM AND SAR PARTITIONINGS.

!     
!     AUTHOR:
!     -------

!     S.HASSELMANN MPI FUER METEOROLOGIE HAMBURG 2/94.

!     PARAMETERS:
!     -----------

!     EXTERNALS:
!     ----------
!     NONE.

!-----------------------------------------------------------------------
!     MODULES:
!     --------

      USE YOWPCONS , ONLY : G        ,ZPI      ,EPSMIN
      USE YOWTEST  , ONLY : IU06

!-----------------------------------------------------------------------
!     INTERFACE:
!     ----------

      IMPLICIT NONE

      INTEGER 
     & NSPECW,NSPECS,
!          NUMBER OF WAM-SAR SPECTRA.
     & MPART, JPSIW, 
!    MAXIMUM NUMBER OF PARTITIONINGS, MAXIMUM  NUMBER OF SAR POINTS
!    INFLUENCING ONE WAM POINT.
     & NSIW1D(NSPECW,JPSIW),NTOSIW1D(NSPECW),
!          INDEX OF SAR DATA POINT INFLUENCING WAM DATA POINT.
!          NUMBER OF SAR DATA POINTS INFLUENCING WAM DATA POINT.
     & NPARTW(NSPECW),NPARTS(NSPECS)
!          NUMBER OF WAVE SYSTEMS IN WAM AND SAR SPECTRA, RESPECTIVELY.
      INTEGER :: MAXMPART
!     MAXIMUM NUMBER OF PARTITIONINGS USED
      REAL 
     & XMEANEW(NSPECW,MPART),
!          MEAN ENERGIES OF PARTITIONINGS IN WAM SPECTRA.
     & XMEANANGW(NSPECW,MPART),XMEANANGS(NSPECS,MPART),
!          MEAN DIRECTIONS 
     & XMEANFREW(NSPECW,MPART),XMEANFRES(NSPECS,MPART),
!          MEAN FREQUENCIES OF PARTITIONINGS
     & EP(NSPECW,MPART),XKP(NSPECW,MPART),YKP(NSPECW,MPART)
!          MEAN ENERGIES, WAVE NUMBER COMPONENTS OF PARTITIONINGS 
!          IN WAM SPECTRA.
      REAL, ALLOCATABLE :: DIST(:,:)
!           DISTANCE IN KX - KY PLANE OF WAM AND SAR PARTITIONINGS.
      REAL
     &  DISMIN
!           SAR AND WAM WAVESYSTEMS ARE CROSS ASSIGNED IF THEIR 
!           DISTANCE IN WAVE NUMBER SPACE IS LESS THAN DISMIN.

      LOGICAL CONTROL, LALLOUTPUT
!                     (INPUT) WRITE CONTROL MESSAGES ON UNIT 6 ?
!                     .TRUE. = YES , .FALSE. = NO
      INTEGER   
     & NPASC2W(NSPECW,MPART,JPSIW),
!         WAM --> SAR CROSSASSIGNMENT
!         INDEX OF PARTITIONING IN SAR SPECTRUM NSIW1D(NSPEC,JPSI)
!         CROSSASSIGNED TO PARTITIONING MPART OF WAM SPECTRUM NSPEC.
     & CORRELTAS (NSPECW,MPART,JPSIW)
!         SAR --> WAM CROSSASSIGNMENT.
!         >0 = NPASC2W
!         <0 NO CROSSASSIGNMENT TO A WAM-PARTITIONING.

!     VARIABLES:
!     ----------

      REAL
     &  MINDISH,MINDIST,MINDIS(MPART)
      INTEGER 
     & JSPEC,JPARTW,JPARTS,JSAR,IDSAR,JPARWH,JPARSH,IPSH,JPARWH1
!         COUNTERS
      INTEGER NPARTWMAX, NPARTSMAX
!                      MAXIMUM VALUE OF NPARTW/NPARTS OVER ALL
!                      SPECTRA
      REAL 
     & FSX(NSPECS,MPART), FSY(NSPECS,MPART)
!         MEAN WAVE NUMBERS OF SAR PARTITIONINGS.
      REAL :: AKABS

!---------------------------------------------------------------------

      IF( CONTROL ) WRITE(IU06,*) 'CALL OF SUBROUTINE CROSSW'

!     INITIALISATION

      LALLOUTPUT = .FALSE.

      CORRELTAS=0

      NPARTWMAX = 0
      NPARTSMAX = 0

      DO JSPEC = 1,NSPECW
        NPARTWMAX = MAX(NPARTWMAX,NPARTW(JSPEC))
      END DO
      DO JSPEC = 1,NSPECS
        NPARTSMAX = MAX(NPARTSMAX,NPARTS(JSPEC))
      END DO
      ALLOCATE(DIST(NPARTWMAX,NPARTSMAX))

!      COMPUTE WAVE NUMBER ARRAYS.

      DO JPARTW = 1, MAXMPART
        DO JSPEC = 1,NSPECW
          IF(JPARTW.LE.NPARTW(JSPEC)) THEN
            AKABS=(ZPI*XMEANFREW(JSPEC,JPARTW))**2/G
            EP(JSPEC,JPARTW)=XMEANEW(JSPEC,JPARTW) 
            XKP(JSPEC,JPARTW)
     &         = AKABS * COS( XMEANANGW(JSPEC,JPARTW) )
            YKP(JSPEC,JPARTW)
     &         = AKABS * SIN( XMEANANGW(JSPEC,JPARTW) )
          ELSE
            EP(JSPEC,JPARTW) = 0.
            XKP(JSPEC,JPARTW) = EPSMIN
            YKP(JSPEC,JPARTW) = EPSMIN
          ENDIF
        END DO
      ENDDO
      DO JPARTS = 1,MAXMPART
        DO JSPEC = 1,NSPECS
          IF(JPARTS.LE.NPARTS(JSPEC)) THEN
            AKABS=(ZPI*XMEANFRES(JSPEC,JPARTS))**2/G
            FSX(JSPEC,JPARTS)
     &           = AKABS * COS( XMEANANGS(JSPEC,JPARTS) )
            FSY(JSPEC,JPARTS)
     &           = AKABS * SIN( XMEANANGS(JSPEC,JPARTS) )
          ELSE
            FSX(JSPEC,JPARTS) = EPSMIN
            FSY(JSPEC,JPARTS) = EPSMIN
          ENDIF
        END DO
      END DO

!     FOR EACH WAM SPECTRUM CROSSASSIGN ITS PARTITIONINGS TO 
!     THOSE OF ALL 
!     SAR RETRIEVED SPECTRA INFLUENCING THE WAM GRID POINT.

      DO JSPEC=1,NSPECW
       DO JSAR=1,NTOSIW1D(JSPEC)
         IDSAR=NSIW1D(JSPEC,JSAR)

!     COMPUTE DISTANCE BETWEEN SAR AND WAM PEAKS.

        DO JPARTS=1,NPARTS(IDSAR)
         CORRELTAS(JSPEC,JPARTS,JSAR)=-1
         MINDIS(JPARTS)=100.
        END DO

        DO JPARTW = 1,NPARTW(JSPEC)
          DO JPARTS = 1,NPARTS(IDSAR)
            AKABS=(0.5*(XKP(JSPEC,JPARTW)**2+FSX(IDSAR,JPARTS)**2+
     &             YKP(JSPEC,JPARTW)**2+FSY(IDSAR,JPARTS)**2))
            AKABS=MAX(AKABS,0.1E-10)
            DIST(JPARTW,JPARTS)
     &       = (( XKP(JSPEC,JPARTW) - FSX(IDSAR,JPARTS) ) ** 2
     &        + ( YKP(JSPEC,JPARTW) - FSY(IDSAR,JPARTS) ) ** 2)/
     &         AKABS
          END DO
        END DO

        DO JPARTW = 1,NPARTW(JSPEC)
          NPASC2W(JSPEC,JPARTW,JSAR)=0
          MINDIST=100.
          DO JPARTS = 1,NPARTS(IDSAR)
            IF( DIST(JPARTW,JPARTS).LT.DISMIN )THEN
              IF(DIST(JPARTW,JPARTS).LT.MINDIST) THEN
                IF(CORRELTAS(JSPEC,JPARTS,JSAR).LT.0 ) THEN
                  IF(NPASC2W(JSPEC,JPARTW,JSAR).GT.0) THEN
                    CORRELTAS(JSPEC,NPASC2W(JSPEC,JPARTW,JSAR),
     &                        JSAR)=-1
                    MINDIS(NPASC2W(JSPEC,JPARTW,JSAR))=100.
                  END IF
                  MINDIST=DIST(JPARTW,JPARTS)
                  NPASC2W(JSPEC,JPARTW,JSAR) = JPARTS
                  CORRELTAS(JSPEC,JPARTS,JSAR)=JPARTW
                  MINDIS(JPARTS)=MINDIST
                ELSEIF(DIST(JPARTW,JPARTS).LT.MINDIS(JPARTS)) THEN
                  MINDIST=DIST(JPARTW,JPARTS)
                  NPASC2W(JSPEC,JPARTW,JSAR) = JPARTS
                  IF(CORRELTAS(JSPEC,JPARTS,JSAR).NE.JPARTW.AND.
     &               CORRELTAS(JSPEC,JPARTS,JSAR).GT.0) THEN
                    NPASC2W(JSPEC,CORRELTAS(JSPEC,JPARTS,JSAR),
     &                      JSAR) = 0
                    MINDISH=DISMIN
                    JPARWH=CORRELTAS(JSPEC,JPARTS,JSAR)
                    IPSH=0
                    JPARWH1=-1
                    DO JPARSH=1,NPARTS(IDSAR)
                      IF(CORRELTAS(JSPEC,JPARSH,JSAR).LT.0.AND.
     &                  DIST(JPARWH,JPARSH).
     &                  LT.MINDISH.AND.JPARSH.NE.JPARTS) THEN
                        MINDISH=DIST(JPARWH,JPARSH)
                        IPSH=JPARSH
                        JPARWH1=JPARWH
                      END IF
                    END DO
                    IF(IPSH.GT.0) THEN
                      CORRELTAS(JSPEC,IPSH,JSAR)=JPARWH1
                      NPASC2W(JSPEC,JPARWH1,JSAR)=IPSH
                      MINDIS(IPSH)=MINDISH
                    END IF
                  END IF
                  CORRELTAS(JSPEC,JPARTS,JSAR)=JPARTW
                END IF
              END IF
            ELSEIF(MINDIST.EQ.100.) THEN
              NPASC2W(JSPEC,JPARTW,JSAR) = 0
            END IF
!         END LOOP OVER SAR PARTITIONINGS.
          END DO
!       END LOOP OVER WAM PARTITIONINGS.
        END DO

         IF(CONTROL .AND. LALLOUTPUT )THEN
            WRITE(IU06,*)' NPARTS ',NPARTS(IDSAR),' NPARTW ',
     &             NPARTW(JSPEC)
            WRITE(IU06,*)' NCORR.. ',(NPASC2W(JSPEC,JPARTW,JSAR),
     &             JPARTW=1,NPARTW(JSPEC))
          ENDIF
!       END LOOP OVER SAR GRID POINTS INFLUENCING WAM POINT.
        END DO
!     END LOOP OVER WAM GRID POINTS.
      END DO

      DEALLOCATE(DIST)

      IF( CONTROL ) WRITE(IU06,*) ' ENDING SUBROUTINE CROSSW'

      RETURN
      END SUBROUTINE CROSSW
