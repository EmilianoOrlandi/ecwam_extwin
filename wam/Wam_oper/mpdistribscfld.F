      SUBROUTINE MPDISTRIBSCFLD(ISEND,ITAG,NSTART,NEND,FIELD)

! ----------------------------------------------------------------------

!****  *MPDISTRIBSCFLD* - DISTRIBUTE FIELD ACROSS PROCESSORS 

!     J. BIDLOT    ECMWF   SEPTEMBER 1997 

!     PURPOSE.
!     --------
!     SEND THE RESPECTIVE CONTRIBUTION OF ARRAY FIELD FROM PROCESSOR 
!     ISEND TO THE OTHER PE's.

!*    INTERFACE.
!     ----------

!     CALL *MPDISTRIBFL*(ISEND,ITAG,NSTART,NEND,MI,MS,FIELD) 

!     *ISEND*     RANK OF THE PROCESS ONTO WHICH FIELD IS COLLECTED 
!     *ITAG*      TAG ASSOCIATED WITH AS A PARTICULAR CALL TO SUBROUTINE
!                 THIS IS NECESSARY TO DIFFERENTIATE THE DIFFERENT CALLS
!     *NSTART*    INDEX OF THE FIRST POINT OF THE SUB GRID DOMAIN
!     *NEND*      INDEX OF THE LAST POINT OF THE SUB GRID DOMAIN
!     *FIELD*     INPUT/OUTPUT ARRAY

!     METHOD.
!     -------
!     MPE SEND OF ARRAY FIELD FROM PROCESSOR CORRESPONDING TO ISEND TO 
!     ALL OTHER PROCESSORS.

!     EXTERNALS.
!     ----------
!     MPE PACKAGE :
!         MPE_SEND
!         MPE_RECV
!         MPEI_ABORT 

!     REFERENCES.
!     -----------
!         NONE
! -------------------------------------------------------------------

      USE YOWMPP   , ONLY : IRANK    ,NPROC    ,MPMAXLENGTH
      USE YOWPARAM , ONLY : NIBLO

!----------------------------------------------------------------------
!     ALLOCATABLE ARRAYS THAT ARE PASSED AS SUBROUTINE ARGUMENTS

      INTEGER,DIMENSION(NPROC) :: NSTART,NEND
      REAL,DIMENSION(NIBLO) :: FIELD
!----------------------------------------------------------------------

      REAL,ALLOCATABLE :: ZCOMBUF(:)

      IF((ISEND.EQ.0).OR.(NPROC.EQ.1)) THEN
        RETURN
      ELSEIF(IRANK.EQ.ISEND) THEN
!     1.1 SEND TO ALL PROCESSORS OTHER THAN ISEND
!         ------------------------------------------------
        MPLENGTH=MPMAXLENGTH
        ALLOCATE(ZCOMBUF(MPLENGTH))

        DO IP=1,ISEND-1
          KCOUNT=0
          DO IJ=NSTART(IP),NEND(IP)
            KCOUNT=KCOUNT+1
            ZCOMBUF(KCOUNT)=FIELD(IJ)
          ENDDO
          CALL MPE_SEND(ZCOMBUF,MPLENGTH,2,IP,ITAG,0,0,0,IERR)
          IF(IERR.LT.0) CALL MPEI_ABORT
     &     ('MPE_SEND ERROR 1 in MPDISTRIBSCFLD' )
        ENDDO

        DO IP=ISEND+1,NPROC
          KCOUNT=0
          DO IJ=NSTART(IP),NEND(IP)
            KCOUNT=KCOUNT+1
            ZCOMBUF(KCOUNT)=FIELD(IJ)
          ENDDO
          CALL MPE_SEND(ZCOMBUF,MPLENGTH,2,IP,ITAG,0,0,0,IERR)
          IF(IERR.LT.0) CALL MPEI_ABORT
     &     ('MPE_SEND ERROR 2 in MPDISTRIBSCFLD' )
        ENDDO

      ELSE

!     1.2 RECEIVE CONTRIBUTION TO THE FIELD FROM PE ISEND 
!         ------------------------------------------------ 

        MPLENGTH=MPMAXLENGTH
        ALLOCATE(ZCOMBUF(MPLENGTH))

        CALL MPE_RECV(ZCOMBUF,MPLENGTH,2,ISEND,ITAG,0,0,0,
     &   KRCOUNT,KRFROM,KRTAG,IERR)
        IF(IERR.LT.0) CALL MPEI_ABORT
     &   ('MPE_RECV ERROR in MPDISTRIBSCFLD' )
        IF(KRCOUNT.NE.MPLENGTH) CALL MPEI_ABORT
     &   ('MPE_RECV ERROR in MPDISTRIBSCFLD:MISMATCHED MSG LENGTH')
        IF(KRTAG.NE.ITAG) CALL MPEI_ABORT
     &   ('MPE_RECV ERROR in MPDISTRIBSCFLD MISMATCHED TAGS' )

        KCOUNT=0
        DO IJ=NSTART(IRANK),NEND(IRANK)
          KCOUNT=KCOUNT+1
          FIELD(IJ)=ZCOMBUF(KCOUNT)
        ENDDO

      ENDIF

      DEALLOCATE(ZCOMBUF)

      RETURN
      END SUBROUTINE MPDISTRIBSCFLD
