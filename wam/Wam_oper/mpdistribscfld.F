      SUBROUTINE MPDISTRIBSCFLD(ISEND,ITAG,NSTART,NEND,FIELD)

! ----------------------------------------------------------------------

!****  *MPDISTRIBSCFLD* - DISTRIBUTE FIELD ACROSS PROCESSORS 

!     J. BIDLOT    ECMWF   SEPTEMBER 1997 

!     PURPOSE.
!     --------
!     SEND THE RESPECTIVE CONTRIBUTION OF ARRAY FIELD FROM PROCESSOR 
!     ISEND TO THE OTHER PE's.

!*    INTERFACE.
!     ----------

!     CALL *MPDISTRIBFL*(ISEND,ITAG,NSTART,NEND,MI,MS,FIELD) 

!     *ISEND*     RANK OF THE PROCESS ONTO WHICH FIELD IS COLLECTED 
!     *ITAG*      TAG ASSOCIATED WITH AS A PARTICULAR CALL TO SUBROUTINE
!                 THIS IS NECESSARY TO DIFFERENTIATE THE DIFFERENT CALLS
!     *NSTART*    INDEX OF THE FIRST POINT OF THE SUB GRID DOMAIN
!     *NEND*      INDEX OF THE LAST POINT OF THE SUB GRID DOMAIN
!     *FIELD*     INPUT/OUTPUT ARRAY

!     METHOD.
!     -------
!     MPL SEND OF ARRAY FIELD FROM PROCESSOR CORRESPONDING TO ISEND TO 
!     ALL OTHER PROCESSORS.

!     EXTERNALS.
!     ----------
!     MPL PACKAGE :
!         MPL_SEND
!         MPL_RECV
!         MPL_ABORT 

!     REFERENCES.
!     -----------
!         NONE
! -------------------------------------------------------------------

      USE YOWMPP   , ONLY : IRANK    ,NPROC    ,MPMAXLENGTH
      USE YOWPARAM , ONLY : NIBLO
      USE MPL_MODULE

!----------------------------------------------------------------------
!     ALLOCATABLE ARRAYS THAT ARE PASSED AS SUBROUTINE ARGUMENTS

      INTEGER,DIMENSION(NPROC) :: NSTART,NEND
      REAL,DIMENSION(NIBLO) :: FIELD
!----------------------------------------------------------------------

      INTEGER,DIMENSION(NPROC) :: ISENDREQ
      REAL,ALLOCATABLE :: ZCOMBUFS(:,:)
      REAL,ALLOCATABLE :: ZCOMBUFR(:)


      IF((ISEND.EQ.0).OR.(NPROC.EQ.1)) RETURN 

      IF(IRANK.EQ.ISEND) THEN
!     1.1 SEND NON BLOCKING TO ALL PROCESSORS
!         -----------------------------------
        MPLENGTH=MPMAXLENGTH
        ALLOCATE(ZCOMBUFS(MPLENGTH,NPROC))

        DO IP=1,NPROC
          KCOUNT=0
          DO IJ=NSTART(IP),NEND(IP)
            KCOUNT=KCOUNT+1
            ZCOMBUFS(KCOUNT,IP)=FIELD(IJ)
          ENDDO
        ENDDO

        DO IP=1,NPROC
          CALL GSTATS(624,0)
          CALL MPL_SEND(ZCOMBUFS(1:MPLENGTH,IP),KDEST=IP,KTAG=ITAG,
     &     KMP_TYPE=JP_NON_BLOCKING_STANDARD,KREQUEST=ISENDREQ(IP),
     &     CDSTRING='MPDISTRIBSCFLD SEND:')
          CALL GSTATS(624,1)
        ENDDO

      ENDIF

!     1.2 RECEIVE CONTRIBUTION TO THE FIELD FROM PE ISEND 
!         ------------------------------------------------ 

      MPLENGTH=MPMAXLENGTH
      ALLOCATE(ZCOMBUFR(MPLENGTH))

      CALL GSTATS(624,0)
      CALL MPL_RECV(ZCOMBUFR(1:MPLENGTH),KSOURCE=ISEND,KTAG=ITAG,
     & KOUNT=KRCOUNT,KRECVTAG=KRTAG,CDSTRING='MPDISTRIBSCFLD:')
      IF(KRCOUNT.NE.MPLENGTH) CALL MPL_ABORT
     & ('MPL_RECV ERROR in MPDISTRIBSCFLD:MISMATCHED MSG LENGTH')
      IF(KRTAG.NE.ITAG) CALL MPL_ABORT
     & ('MPL_RECV ERROR in MPDISTRIBSCFLD MISMATCHED TAGS' )
      CALL GSTATS(624,1)

      KCOUNT=0
      DO IJ=NSTART(IRANK),NEND(IRANK)
        KCOUNT=KCOUNT+1
        FIELD(IJ)=ZCOMBUFR(KCOUNT)
      ENDDO

!     1.3 WAIT ANY OUTSTANDING SENDS TO COMPLETE
!         --------------------------------------

      IF(IRANK.EQ.ISEND) THEN
        CALL MPL_WAIT(ZCOMBUFS(1:MPLENGTH,1),KREQUEST=ISENDREQ,
     &                CDSTRING='MPDISTRIBSCFLD:')
        DEALLOCATE(ZCOMBUFS)
      ENDIF

      DEALLOCATE(ZCOMBUFR)

      RETURN
      END SUBROUTINE MPDISTRIBSCFLD
