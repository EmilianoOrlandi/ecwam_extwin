      SUBROUTINE MPBCASTSARIN(ISEND, ITAG) 

!****  *MPBCASTSARIN* - BROADCASTS INPUT SAR DATA 

!     J. BIDLOT    ECMWF   NOVEMBER 1999

!     PURPOSE.
!     --------

!     BROADCASTS SAR INPUT FROM PE ISEND TO ALL OTHER PE'S 

!*    INTERFACE.
!     ----------

!     CALL *MPBCASTSARIN*(ISEND, ITAG)

!     *ISEND*     PE ON WHICH THE SAR INPUT WAS READ IN.
!     *ITAG*      TAG ASSOCIATED WITH A PARTICULAR CALL TO SUBROUTINE
!                 THIS IS NECESSARY TO DIFFERENTIATE THE DIFFERENT CALLS
!                 THE USE OF A SEPARATE TAG FOR EACH SPECIFIC CALL
!                 SHOULD ENSURE THAT NO CONFLICT ARISES BETWEEN 
!                 DIFFERENT MESSAGES

!     METHOD.
!     -------

!     EXTERNALS.
!     ----------
!     MPE PACKAGE :
!         MPE_BROADCAST
!         MPE_RECV
!         MPEI_ABORT 

!     REFERENCES.
!     -----------
!         NONE
! -------------------------------------------------------------------

      USE YOWICE   , ONLY : FLMIN
      USE YOWMPP   , ONLY : IRANK    ,NPROC
      USE YOWPARAM , ONLY : NANG     ,NFRE
      USE YOWSARAS , ONLY : NSPEC    ,SPEC     ,LONG     ,LAT

!----------------------------------------------------------------------
      IMPLICIT NONE

      INTEGER :: IERR, ISEND, ITAG, MZC, KCOUNT, KRCOUNT, KRFROM, KRTAG 
      INTEGER :: ISPEC, IFRE, IANG
      INTEGER :: BUFFER_SIZE_BCSARIN
      REAL,ALLOCATABLE :: ZCOMBUF(:)


      IF(NPROC.EQ.1) THEN
        RETURN
!     1.1 SEND TO ALL PROCESSORS OTHER THAN ISEND
!         ----------------------------------------
      ELSEIF(IRANK.EQ.ISEND) THEN
        CALL MPE_BROADCAST(NSPEC,1,1,ISEND,ITAG,0,0,0,IERR)
        IF(IERR.LT.0) CALL MPEI_ABORT
     &   ('MPE_BROADCAST ERROR 0 in MPBCASTSARIN' )
        ITAG=ITAG+1

        MZC=BUFFER_SIZE_BCSARIN(NSPEC,NANG,NFRE)
        ALLOCATE(ZCOMBUF(MZC))

        KCOUNT=0
        DO ISPEC = 1,NSPEC
          KCOUNT=KCOUNT+1
          ZCOMBUF(KCOUNT)=LONG(ISPEC,2) 
        ENDDO 
        DO ISPEC = 1,NSPEC
          KCOUNT=KCOUNT+1
          ZCOMBUF(KCOUNT)=LAT(ISPEC,2) 
        ENDDO 
        DO IFRE = 1,NFRE
          DO IANG = 1,NANG
            DO ISPEC = 0,NSPEC
              KCOUNT=KCOUNT+1
              ZCOMBUF(KCOUNT)=SPEC(ISPEC,IANG,IFRE,2)
            ENDDO 
          ENDDO 
        ENDDO 

        CALL MPE_BROADCAST
     &   (ZCOMBUF,MZC,2,ISEND,ITAG,0,0,0,IERR)
        IF(IERR.LT.0) CALL MPEI_ABORT
     &   ('MPE_BROADCAST ERROR 1 in MPBCASTSARIN' )
        ITAG=ITAG+1

!     1.2 RECEIVE CONTRIBUTION TO THE FIELDS FROM PE ISEND
!         ------------------------------------------------
      ELSE 
        CALL MPE_RECV(NSPEC,1,1,ISEND,ITAG,0,0,0,
     &   KRCOUNT,KRFROM,KRTAG,IERR)
        IF(IERR.LT.0) CALL MPEI_ABORT
     &   ('MPE_RECV ERROR 0 in MPBCASTSARIN' )
        IF(KRCOUNT.NE.1) CALL MPEI_ABORT
     &   ('MPE_RECV ERROR 0 in MPBCASTSARIN:MISMATCHED MSG LENGTH')
        IF(KRTAG.NE.ITAG) CALL MPEI_ABORT
     &   ('MPE_RECV ERROR 0 in MPBCASTSARIN MISMATCHED TAGS' )
        ITAG=ITAG+1

        ALLOCATE(SPEC(0:NSPEC,NANG,NFRE,2))
        SPEC=FLMIN
        ALLOCATE(LONG(NSPEC,2))
        ALLOCATE(LAT(NSPEC,2))

        MZC=BUFFER_SIZE_BCSARIN(NSPEC,NANG,NFRE)
        ALLOCATE(ZCOMBUF(MZC))

        CALL MPE_RECV(ZCOMBUF,MZC,2,ISEND,ITAG,0,0,0,
     &   KRCOUNT,KRFROM,KRTAG,IERR)
        IF(IERR.LT.0) CALL MPEI_ABORT
     &   ('MPE_RECV ERROR 1 in MPBCASTSARIN' )
        IF(KRCOUNT.NE.MZC) CALL MPEI_ABORT
     &   ('MPE_RECV ERROR 1 in MPBCASTSARIN:MISMATCHED MSG LENGTH')
        IF(KRTAG.NE.ITAG) CALL MPEI_ABORT
     &   ('MPE_RECV ERROR 1 in MPBCASTSARIN MISMATCHED TAGS' )
        ITAG=ITAG+1

        KCOUNT=0
        DO ISPEC = 1,NSPEC
          KCOUNT=KCOUNT+1
          LONG(ISPEC,2)=ZCOMBUF(KCOUNT)
        ENDDO 
        DO ISPEC = 1,NSPEC
          KCOUNT=KCOUNT+1
          LAT(ISPEC,2)=ZCOMBUF(KCOUNT)
        ENDDO 
        DO IFRE = 1,NFRE
          DO IANG = 1,NANG
            DO ISPEC = 0,NSPEC
              KCOUNT=KCOUNT+1
              SPEC(ISPEC,IANG,IFRE,2)=ZCOMBUF(KCOUNT)
            ENDDO 
          ENDDO 
        ENDDO 

      ENDIF

      DEALLOCATE(ZCOMBUF)

      RETURN
      END SUBROUTINE MPBCASTSARIN

      INTEGER FUNCTION BUFFER_SIZE_BCSARIN (NSPEC,NANG,NFRE)
        IMPLICIT NONE
        INTEGER :: NSPEC,NANG,NFRE
        INTEGER :: BUFFER_SIZE_BCSARIN
        BUFFER_SIZE_BCSARIN = 1+2*NSPEC+(NSPEC+1)*NANG*NFRE
      END FUNCTION BUFFER_SIZE_BCSARIN
