      SUBROUTINE MPGATHERGRDFLD(ISEND,IRECV,ITAG,FIELD) 

!****  *MPGATHERGRDFLD* - GATHER GRID DATA FIELD FROM PROCESS ISEND
!****                     ONTO PROCESS IRECV 

!     J. BIDLOT    ECMWF   APRIL 1996  MESSAGE PASSING

!     PURPOSE.
!     --------

!     TRANSMIT GRID (2-D) DATA CONTAINED IN THE ARRAY FIELD THAT MIGHT BE 
!     ON A DIFFERENT PROCESS TO THE RECEIVING PROCESS

!*    INTERFACE.
!     ----------

!     CALL *MPGATHERGRDFLD*(ISEND,IRECV,ITAG,FIELD) 

!     *ISEND*     PROCESS RANK SENDING THE GRID FIELD 
!     *IRECV*     PROCESS RANK RECEIVING THE GRID FIELD 
!     *ITAG*      TAG USED TO DIFFERENTIATE THE CALLS TO THIS SUBROUTINE 
!     *FIELD*     INPUT/OUTPUT ARRAY CONTAINING THE FIELD

!     METHOD.
!     -------
!     MPE SEND to PROCESS IRECV FROM PROCESS ISEND 

!     EXTERNALS.
!     ----------
!     MPE PACKAGE :
!         MPE_SEND
!         MPE_RECV
!         MPEI_ABORT 

!     REFERENCES.
!     -----------
!         NONE
! -------------------------------------------------------------------


      USE YOWPARAM , ONLY : NGX      ,NGY
      USE YOWMPP   , ONLY : IRANK    ,NPROC



!----------------------------------------------------------------------
!     ALLOCATABLE ARRAYS THAT ARE PASSED AS SUBROUTINE ARGUMENTS

      REAL,DIMENSION(NGX,NGY) :: FIELD
!----------------------------------------------------------------------

      REAL,DIMENSION(NGX*NGY):: ZCOMBUF


      KCOUNT=NGX*NGY 

      IF((ISEND.EQ.IRECV).OR.(NPROC.EQ.1)) THEN
        RETURN

      ELSEIF(IRANK.EQ.ISEND) THEN 
!     1.1 SEND FIELD FROM PROCESS ISEND TO PROCESS IRECV
!         -----------------------------------------------

!        LOAD COMMUNICATION BUFFER
        IJ=0
        DO J=1,NGY
          DO I=1,NGX
            IJ=IJ+1
            ZCOMBUF(IJ)=FIELD(I,J)
          ENDDO
        ENDDO

        CALL MPE_SEND(ZCOMBUF,KCOUNT,2,IRECV,ITAG,0,0,0,IERR)
        IF(IERR.LT.0) CALL MPEI_ABORT
     &   ('MPE_SEND ERROR in MPGATHERGRDFLD' )

      ELSEIF(IRANK.EQ.IRECV) THEN
!     1.2 RECEIVE FIELD FROM PROCESS ISEND ON PROCESS IRECV
!         ------------------------------------------------- 
        CALL MPE_RECV(ZCOMBUF,KCOUNT,2,ISEND,ITAG,0,0,0,
     &   KRCOUNT,KRFROM,KRTAG,IERR)
        IF(IERR.LT.0) CALL MPEI_ABORT
     &   ('MPE_RECV ERROR in MPGATHERGRDFLD' )
        IF(KRCOUNT.NE.KCOUNT) CALL MPEI_ABORT
     &   ('MPE_RECV ERROR in MPGATHERGRDFLD:MISMATCHED MESSAGE LENGTH')
        IF(KRTAG.NE.ITAG) CALL MPEI_ABORT
     &   ('MPE_RECV ERROR in MPGATHERGRDFLD: MISMATCHED TAGS' )

!      DECODE COMMUNICATION BUFFER
        IJ=0
        DO J=1,NGY
          DO I=1,NGX
            IJ=IJ+1
            FIELD(I,J)=ZCOMBUF(IJ)
          ENDDO
        ENDDO
      ENDIF

      RETURN
      END SUBROUTINE MPGATHERGRDFLD
